types political_situation_types { 
    type bpm_political_situation_dissent_panel = vbox {
        max_update_rate = 20
		#visible = "[GetVariableSystem.Exists('politics_overview_dissent_panel')]"
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = growing
		spacing = 10
		margin = { 40 10 }

        hbox = {
            name = "tutorial_highlight_government_title"
            spacing = 5
            margin = { 5 8 }
            layoutpolicy_horizontal = preferred

            background = {
                using = default_header_bg_faded
            }
            
            textbox = {
                layoutpolicy_horizontal = expanding
                size = { 0 30 }
                raw_text = "Dissent Situation"
                align = hcenter|nobaseline
                elide = right
                using = fontsize_xxl
                margin_left = 5
            }



        }


        fullscreen_scrollarea = {
            using = default_fade_in_out
            blockoverride "scrollarea_content" {
                vbox = {
                    ## State Institutional Interest Groups
                    # bpm_political_situation_ig_type = {
                    #     blockoverride "visible1" {
                    #         visible = "[And(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End), Not(GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)))]"
                    #     }
                    #     blockoverride "visible2" {
                    #         visible = "[And(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End), GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End))]"
                    #     }
                    # }
                    
                    # bpm_political_situation_ig_type = {
                    #     blockoverride "visible1" {
                    #         visible = "[And(Not(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), And(GetScriptedGui('bpm_ig_is_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End), Not(GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End))))]"
                    #     }
                    #     blockoverride "visible2" {
                    #         visible = "[And(Not(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), And(GetScriptedGui('bpm_ig_is_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End), GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)))]"
                    #     }
                    #     blockoverride "text" {
                    #         text = "#header [concept_bpm_institutional_ig]#!"
                    #     }
                    # }

                    # bpm_political_situation_ig_type = {
                    #     blockoverride "visible1" {
                    #         visible = "[And(Not(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), And(Not(GetScriptedGui('bpm_ig_is_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), Not(GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End))))]"
                    #     }
                    #     blockoverride "visible2" {
                    #         visible = "[And(Not(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), And(Not(GetScriptedGui('bpm_ig_is_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)))]"
                    #     }
                    #     blockoverride "text" {
                    #         text = "#header [concept_bpm_ideological_ig]#!"
                    #     }
                    # }

                    # textbox = {
                    #     size = { 285 60 }
                    #     text = "Fronts"
                    #     fontsize = 20
                    #     default_format = "#header"
                    #     align = hcenter
                    #     multiline = yes
                    #     margin = { 0 10 }
                    # }
                    # divider_decorative = {
                    # }
                    # hbox = {
                    #     minimumsize = { -1 10 }
                    # }
                    # flowcontainer = {
                    #     spacing = 5
                    #     margin_top = 10
                    #     #parentanchor = hcenter
                    #     datamodel = "[GetGlobalList('bpm_existing_front_names')]"
                    #     #datamodel = "[GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                    #     direction = horizontal
                    
                    #     item = {
                    #         flowcontainer = {
                    #             visible = "[Not(GreaterThan_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)5'))]"
                    #             widget = {
                    #                 size = { 305 400 }
                    #                 maximumsize = { 305 400 }
                    #                 minimumsize = { 305 400 }
                    #                 margin = { 10 0 }
                    #                 using = entry_bg_fancy_solid_bg
                    #                 visible = "[Or(Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_members')))), Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_movs')))))]"
                    #                 vbox = {
                    #                     maximumsize = { 305 400 }
                    #                     spacing = 5
                    #                     background = {
                    #                         using = fade_right_entry_fancy_header_colored
                    #                         color = { 0.08 0.48 0.05 1 }
                    #                         margin = { 0 0 }
                    #                     }
                    #                     hbox = {
                    #                         margin = { 15 0 }
                    #                         margin_top = 10
                    #                         layoutpolicy_horizontal = expanding
                    #                         icon = {
                    #                             size = { 40 40 }
                    #                             texture = "gfx/interface/icons/political_lobby_icons/lobby_anti.dds"
                    #                         }   
                    #                         textbox = {
                    #                             size = { 215 40 }
                    #                             block "action_name" {
                    #                                 text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]"
                    #                             }
                    #                             default_format = "#header"
                    #                             block "action_tooltip" {
                    #                                 #tooltip = "[JournalEntry.GetStatusDesc]"
                    #                             }
                    #                             fontsize = 18
                    #                             align = hcenter|vcenter
                    #                             parentanchor = left|top
                    #                             #multiline = yes
                    #                         }
                                            
                    #                         expand = {} 
                    #                     }
                    #                     divider_decorative = {}
                    #                     hbox = {
                    #                         minimumsize = { -1 15 }
                    #                     }
                    #                     flowcontainer = {
                    #                         visible = "[Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_members'))))]"
                    #                         direction = vertical
                                            
                    #                         #layoutpolicy_horizontal = expanding
                    #                         datamodel = "[GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_members'))]"
                    #                         item = {
                    #                             flowcontainer = {
                    #                                 direction = horizontal
                    #                                 datacontext = "[Scope.GetInterestGroup]"
                    #                                 # appropriately sized textbox
                    #                                 textbox = {
                    #                                     size = { 275 32 }
                    #                                     text = "[InterestGroup.GetName]"
                    #                                     align = hcenter
                    #                                     default_format = "#header"
                    #                                     #parentanchor = left|vcenter
                    #                                     #multiline = yes
                    #                                     fontsize = 20
                    #                                 }
                    #                                 expand = {}
                    #                             }
                    #                         }

                    #                         expand = {}

                    #                             #expand = {}
                    #                         #expand = {}
                    #                     }
                    #                     flowcontainer = {
                    #                         direction = vertical
                                            
                    #                         #layoutpolicy_horizontal = expanding
                    #                         datamodel = "[GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_movs'))]"
                    #                         item = {
                    #                             flowcontainer = {
                    #                                 direction = horizontal
                    #                                 datacontext = "[Scope.GetPoliticalMovement]"
                    #                                 # appropriately sized textbox
                    #                                 textbox = {
                    #                                     size = { 275 32 }
                    #                                     text = "[PoliticalMovement.GetName]"
                    #                                     align = hcenter
                    #                                     default_format = "#header"
                    #                                     #parentanchor = left|vcenter
                    #                                     #multiline = yes
                    #                                     fontsize = 20
                    #                                 }
                    #                                 expand = {}
                    #                             }
                    #                         }

                    #                         expand = {}

                    #                             #expand = {}
                    #                         #expand = {}
                    #                     }

                    #                     expand = {}
                    #                 }
                    #             }
                    #         }
                    #     }
                    # }
                    # flowcontainer = {
                    #     spacing = 5
                    #     margin_top = 10
                    #     #parentanchor = hcenter
                    #     datamodel = "[GetGlobalList('bpm_existing_front_names')]"
                    #     #datamodel = "[GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                    #     direction = horizontal
                    
                    #     item = {
                    #         flowcontainer = {
                    #             visible = "[GreaterThan_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)5')]"
                    #             widget = {
                    #                 size = { 305 400 }
                    #                 maximumsize = { 305 400 }
                    #                 minimumsize = { 305 400 }
                    #                 margin = { 10 0 }
                    #                 using = entry_bg_fancy_solid_bg
                    #                 visible = "[Or(Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_members')))), Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_movs')))))]"
                    #                 vbox = {
                    #                     maximumsize = { 305 400 }
                    #                     spacing = 5
                    #                     background = {
                    #                         using = fade_right_entry_fancy_header_colored
                    #                         color = { 0.08 0.48 0.05 1 }
                    #                         margin = { 0 0 }
                    #                     }
                    #                     hbox = {
                    #                         margin = { 15 0 }
                    #                         margin_top = 10
                    #                         layoutpolicy_horizontal = expanding
                    #                         icon = {
                    #                             size = { 40 40 }
                    #                             texture = "gfx/interface/icons/political_lobby_icons/lobby_anti.dds"
                    #                         }   
                    #                         textbox = {
                    #                             size = { 215 40 }
                    #                             block "action_name" {
                    #                                 text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]"
                    #                             }
                    #                             default_format = "#header"
                    #                             block "action_tooltip" {
                    #                                 #tooltip = "[JournalEntry.GetStatusDesc]"
                    #                             }
                    #                             fontsize = 18
                    #                             align = hcenter|vcenter
                    #                             parentanchor = left|top
                    #                             #multiline = yes
                    #                         }
                                            
                    #                         expand = {} 
                    #                     }
                    #                     divider_decorative = {}
                    #                     hbox = {
                    #                         minimumsize = { -1 15 }
                    #                     }
                    #                     flowcontainer = {
                    #                         visible = "[Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_members'))))]"
                    #                         direction = vertical
                                            
                    #                         #layoutpolicy_horizontal = expanding
                    #                         datamodel = "[GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_members'))]"
                    #                         item = {
                    #                             flowcontainer = {
                    #                                 direction = horizontal
                    #                                 datacontext = "[Scope.GetInterestGroup]"
                    #                                 # appropriately sized textbox
                    #                                 textbox = {
                    #                                     size = { 275 32 }
                    #                                     text = "[InterestGroup.GetName]"
                    #                                     align = hcenter
                    #                                     default_format = "#header"
                    #                                     #parentanchor = left|vcenter
                    #                                     #multiline = yes
                    #                                     fontsize = 20
                    #                                 }
                    #                                 expand = {}
                    #                             }
                    #                         }

                    #                         expand = {}

                    #                             #expand = {}
                    #                         #expand = {}
                    #                     }
                    #                     flowcontainer = {
                    #                         direction = vertical
                                            
                    #                         #layoutpolicy_horizontal = expanding
                    #                         datamodel = "[GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_movs'))]"
                    #                         item = {
                    #                             flowcontainer = {
                    #                                 direction = horizontal
                    #                                 datacontext = "[Scope.GetPoliticalMovement]"
                    #                                 # appropriately sized textbox
                    #                                 textbox = {
                    #                                     size = { 275 32 }
                    #                                     text = "[PoliticalMovement.GetName]"
                    #                                     align = hcenter
                    #                                     default_format = "#header"
                    #                                     #parentanchor = left|vcenter
                    #                                     #multiline = yes
                    #                                     fontsize = 20
                    #                                 }
                    #                                 expand = {}
                    #                             }
                    #                         }

                    #                         expand = {}

                    #                             #expand = {}
                    #                         #expand = {}
                    #                     }

                    #                     expand = {}
                    #                 }
                    #             }
                    #         }
                    #     }
                    # }


                    textbox = {
                        size = { 285 60 }
                        text = "Active Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }


                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_dissent').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetActiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_subversive_actions = { }
                                }
                            }
                        }
                    }

                    divider_decorative = {}

                    textbox = {
                        size = { 285 60 }
                        text = "Potential Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }


                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForInActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 20
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_dissent').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                #datamodel = "[GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 3
                                }
                                item = {
                                    bpm_political_situation_subversive_actions = {}
                                }
                            }
                        }
                        expand = {}
                    }

                    expand = {}
                }
            }

        }

        expand = {}
	}

    type bpm_political_situation_crises_panel = vbox {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = growing
		spacing = 10
		margin = { 40 10 }

        hbox = {
            name = "tutorial_highlight_government_title"
            spacing = 5
            margin = { 5 8 }
            layoutpolicy_horizontal = preferred

            background = {
                using = default_header_bg_faded
            }
            
            textbox = {
                layoutpolicy_horizontal = expanding
                size = { 0 30 }
                raw_text = "Crises Situations"
                align = hcenter|nobaseline
                elide = right
                using = fontsize_xxl
                margin_left = 5
            }



        }

        fullscreen_scrollarea = {
            using = default_fade_in_out
            blockoverride "scrollarea_content" {
                vbox = {

                    textbox = {
                        size = { 285 60 }
                        text = "Active Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }

                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_crises').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetActiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_crises_scandals = { }
                                }
                            }
                        }
                    }

                    divider_decorative = {}

                    textbox = {
                        size = { 285 60 }
                        text = "Potential Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }


                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForInActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_crises').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                #datamodel = "[GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_crises_scandals = { }
                                }
                            }
                        }
                        expand = {}
                    }

                    expand = {}
                }
            }

        }

        expand = {}
	}

    type bpm_political_situation_scandals_panel = vbox {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = growing
		spacing = 10
		margin = { 40 10 }

        hbox = {
            name = "tutorial_highlight_government_title"
            spacing = 5
            margin = { 5 8 }
            layoutpolicy_horizontal = preferred
            
            background = {
                using = default_header_bg_faded
            }
            
            textbox = {
                layoutpolicy_horizontal = expanding
                size = { 0 30 }
                raw_text = "Scandal Situations"
                align = hcenter|nobaseline
                elide = right
                using = fontsize_xxl
                margin_left = 5
            }



        }

        fullscreen_scrollarea = {
            using = default_fade_in_out
            blockoverride "scrollarea_content" {
                vbox = {

                    textbox = {
                        size = { 285 60 }
                        text = "Active Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }

                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_scandals').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetActiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_crises_scandals = { }
                                }
                            }
                        }
                    }

                    divider_decorative = {}


                    textbox = {
                        size = { 285 60 }
                        text = "Potential Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }

                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForInActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_scandals').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                #datamodel = "[GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_crises_scandals = { }
                                }
                            }
                        }
                        expand = {}
                    }

                    expand = {}
                    
                }
            }

        }

        expand = {}
	}

    type bpm_political_situation_ig_type = hbox {
        layoutpolicy_horizontal = expanding 

        maximumsize = { -1 120 }
        spacing = 10
        background = {
            using = entry_bg_simple
        }

        #layoutpolicy_vertical = growing

        textbox = {
            size = { 180 120 }
            block "text" {
                text = "BPM_STATE_INSTITUTIONAL_IG"
            }
            using = fontsize_large
            align = left|vcenter
            parentanchor = left|vcenter
            multiline = yes
            margin = { 15 5 }
        }



        vertical_divider = {}

        widget = {
            size = { 745 100% }
            hbox = {
                margin = { 20 5 }
                background = {
					using = fade_center_colored
					color = { 0.54 0.78 0.33 1 }
					margin = { 10 5 }
				}
                icon = {
                    name = "type_icon"
                    size = { 40 40 }
                    texture = "gfx/interface/icons/political_lobby_icons/lobby_pro.dds"
                    tooltip = "BPM_NOT_PLANNING_SUBVERSIVE"
                }
                expand = {}

                flowcontainer = {
                    margin = { 20 5 }
                    direction = horizontal
                    #layoutpolicy_horizontal = growing 
                    datamodel_wrap = 2
                    ignoreinvisible = yes

                    spacing = 25

                    datamodel = "[AccessPlayer.AccessAllInterestGroups]"

                    item = {
                        container = {
                            block "visible1" {}
                            ig_icon = {
                                #visible = "[Not(GreaterThan_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)7'))]"
                                #visible = "[GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)]"
                                size = { 40 40 }
                                blockoverride "tooltip" {}
                                blockoverride "in_government_icon" {}
                            }   
                        }
                    }
                }

                expand = {}
            }
        }

        vertical_divider = {}
        widget = {
            size = { 740 100% }
            background = {
                using = fade_center_colored
                color = { 0.78 0.25 0.25 1 }
                margin = { 10 5 }
            }

            
            hbox = {
                margin = { 20 5 }


                icon = {
                    name = "type_icon"
                    size = { 40 40 }
                    texture = "gfx/interface/icons/political_lobby_icons/lobby_anti.dds"
                    tooltip = "BPM_PLANNING_SUBVERSIVE"
                    parentanchor = right
                }
                expand = {}

                flowcontainer = {
                    margin = { 20 5 }
                    direction = horizontal
                    #layoutpolicy_horizontal = growing 
                    datamodel_wrap = 2
                    ignoreinvisible = yes

                    spacing = 25

                    datamodel = "[AccessPlayer.AccessAllInterestGroups]"

                    item = {
                        container = {
                            block "visible2" {}
                            ig_icon = {
                                #visible = "[Not(GreaterThan_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)7'))]"
                                #visible = "[Not(GreaterThan_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)7'))]"
                                #visible = "[GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)]"
                                size = { 40 40 }
                                blockoverride "tooltip" {}
                                blockoverride "in_government_icon" {}
                            }   
                        }
                    }
                }

                expand = {}
            }
        }


        expand = {}
    }

	type bpm_political_situation_buttons = widget {
		size = { 400 220 }

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

            button = {
				using = default_button
				size = { 360 40 }
				raw_text = "Scandals"
				onclick = "[GetVariableSystem.Toggle('politics_overview_scandals_panel')]"
			}

			button = {
				using = default_button
				size = { 360 40 }
				raw_text = "Dissent"
				onclick = "[GetVariableSystem.Toggle('politics_overview_dissent_panel')]"
			}

            button = {
				using = default_button
				size = { 360 40 }
				raw_text = "Natural Crises"
				onclick = "[GetVariableSystem.Toggle('politics_overview_crises_panel')]"
			}

			expand = {}
		}
	}

    type bpm_political_situation_subversive_actions = widget {
        size = { 500 400 }
        margin = { 10 0 }
        datacontext = "[AccessPlayer.GetJournalEntry(JournalEntryType.Self)]"
        vbox = {
            maximumsize = { 475 380 }
            using = entry_bg_simple_colored
            background = {
                using = entry_bg_simple_colored
                color = { 0.78 0.25 0.25 1 }
                margin = { 0 0 }
            }
            hbox = {
                margin = { 5 0 }
                hbox = {
                    margin_top = 0
                    background = {
                        using = default_header_bg
                    }
                    layoutpolicy_horizontal = expanding
                    expand = {} 
                    icon = {
                        size = { 50 50 }
                        block "icon_texture" {
                            texture = "[JournalEntry.GetIcon]"
                        }
                    }   
                    textbox = {
                        size = { 420 50 }
                        block "action_name" {
                            text = "[JournalEntry.GetName]"
                        }

                        default_format = "#header"
                        block "action_tooltip" {
                            tooltip = "[JournalEntry.GetStatusDesc]"
                        }
                        fontsize = 24
                        align = hcenter|vcenter
                        parentanchor = left|top
                        #multiline = yes
                    }
                    expand = {} 
                }
            }
            divider_clean = {}
            expand = {}
            hbox = {
                margin = { 15 0 }
                visible = "[Not(JournalEntry.MakeScope.Var('bpm_front_currently_planning').IsSet)]"
                layoutpolicy_horizontal = expanding
                container = {
                    textbox = {
                        visible = "[IsDataModelEmpty(JournalEntry.MakeScope.GetList('bpm_planning_subversive_action_ig'))]"
                        size = { 445 40 }
                        text = "#header_tooltip Nobody's planning a revolution mate.#!"
                        fontsize = 24
                        align = hcenter|vcenter
                        parentanchor = left|top
                        #multiline = yes
                    }
                    textbox = {
                        visible = "[And(Not(IsDataModelEmpty(JournalEntry.MakeScope.GetList('bpm_planning_subversive_action_ig'))), Not(JournalEntry.IsActive))]"
                        size = { 445 40 }
                        text = "#bold;N The Following IGs are Planning this Action:#!"
                        fontsize = 18
                        align = hcenter|vcenter
                        parentanchor = left|top
                        #multiline = yes
                    }
                    textbox = {
                        visible = "[And(Not(IsDataModelEmpty(JournalEntry.MakeScope.GetList('bpm_planning_subversive_action_ig'))), JournalEntry.IsActive)]"
                        size = { 445 40 }
                        text = "#bold;N The Following IGs are Executing this Action:#!"
                        fontsize = 18
                        align = hcenter|vcenter
                        parentanchor = left|top
                        #multiline = yes
                    }

                }
                expand = {} 
            }
            bpm_political_action_header = {}
            expand = {}
            # Participating IGs
            participating_igs = {}
            container = {
                visible = "[Not(JournalEntry.IsActive)]"
                participating_igs = { 
                    blockoverride "visible" {
                        # Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning'), '_members')
                        visible = "[Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList(Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning').GetFlagName, '_members'))))]"
                    }
                    blockoverride "datamodel" {
                        # Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning').GetFlagName, '_members')
                        datamodel = "[GetPlayer.MakeScope.GetList(Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning').GetFlagName, '_members'))]"
                    }
                    blockoverride "size" {
                        size = { 32 32 }
                    }
                }
            }
            container = {
                visible = "[Not(JournalEntry.IsActive)]"
                container = {
                    visible = "[Not(IsDataModelEmpty(JournalEntry.MakeScope.GetList('bpm_planning_subversive_action_ig')))]"
                    textbox = {
                        size = { 445 80 }
                        text = "[JournalEntry.GetActivationTooltip]"
                        fontsize = 18
                        align = hcenter|hcenter
                        parentanchor = left|top
                        multiline = yes
                    }

                }
            }
            expand = {}
            container = { 
                visible = "[Not(JournalEntry.IsActive)]"
                participating_movs = { }
            }


                #expand = {}
            expand = {}
            bpm_political_action_texter = {}
            #divider_clean = {}

                #expand = {}

        }
    }

    type bpm_political_action_texter = vbox {
        visible = "[And(JournalEntry.IsActive, Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList(Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning').GetFlagName, '_members')))))]"
        layoutpolicy_vertical = expanding
        hbox = {
            margin_top = 15
            layoutpolicy_horizontal = expanding
            textbox = {
                size = { 225 24 }
                # [JournalEntry.MakeScope.Var('bpm_last_delta')|v-=2]
                text = "#b Total Revolutionary Damage: LINKTOOTHERJE#!"
                fontsize = 16
                align = hcenter|nobaseline
                #multiline = yes
            }
        }
        expand = {}
        hbox = {
            margin = { 5 0 }
            layoutpolicy_horizontal = expanding
            textbox = {
                size = { 225 160 }
                # [JournalEntry.MakeScope.Var('bpm_last_delta')|v-=2]
                text = "bpm_dissent_revolution_desc"
                fontsize = 16
                align = hcenter|nobaseline
                multiline = yes
            }
            textbox = {
                size = { 225 160 }
                # [JournalEntry.MakeScope.Var('bpm_last_delta')|v-=2]
                text = "bpm_dissent_revolution_outcomes"
                fontsize = 16
                align = hcenter|nobaseline
                multiline = yes
            }
        }

        expand = {}
        dynamicgridbox = {
            margin = { 5 25 }
            parentanchor = left
            visible = "[Not( IsDataModelEmpty( JournalEntry.GetScriptedButtons ) )]"
            datamodel = "[JournalEntry.GetScriptedButtons]"
            datamodel_wrap = 2
            flipdirection = yes

            item = {
                widget = {
                    size = { 220 60 }

                    scripted_journal_entry_button = {
                        parentanchor = center
                        using = default_button_primary
                        background = {
                            using = entry_bg_fancy
                            alpha = 0.1
                        }
                        size = { 140 50 }
                    }

                    # Buttons for which the selected trigger is true have a different appearance and tooltip, but share all behaviors.
                    # This means that even selected buttons are clickable as usual, assuming the possible trigger does not prevent it.
                    # This enables more use cases, such as using buttons as on-off toggles, but requires the scripter to disable buttons manually in the possible trigger as needed.
                }
            }
        }
        hbox = { 
            minimumsize = { -1 20 }
        }
        expand = {}
    }

    type bpm_political_action_header = hbox {
        margin = { 15 0 }
        maximumsize = { 400 -1 }
        visible = "[JournalEntry.MakeScope.Var('bpm_front_currently_planning').IsSet]"
        layoutpolicy_horizontal = expanding
        textbox = {
            size = { 125 40 }
            text = "#header_tooltip [Localize(Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning').GetFlagName, '_name'))]#!"
            fontsize = 18
            align = left|vcenter
            #multiline = yes
        }
        vbox = {
            visible = "[Not(JournalEntry.IsActive)]"
            spacing = 5
            tooltip = "bpm_front_action_organization_tooltip"
            textbox = {
                size = { 125 24 }
                # [JournalEntry.MakeScope.Var('bpm_last_delta')|v-=2]
                text = "#yellow Organization#!: [GetPlayer.MakeScope.ScriptValue(Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning').GetFlagName, '_organization'))|v0]#! ([JournalEntry.MakeScope.Var('bpm_last_delta').GetValue|v-=2])"
                fontsize = 16
                align = hcenter|nobaseline
                #multiline = yes
            }
            bad_progressbar_horizontal = {
                size = { 160 12 }

                blockoverride "values" {
                    # Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning'), '_organization')
                    value = "[GetPlayer.MakeScope.ScriptValue(Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning').GetFlagName, '_organization'))]"
                    min = 0
                    max = 100
                }
            }
        }
        vbox = {
            visible = "[JournalEntry.IsActive]"
            spacing = 5
            tooltip = "bpm_front_action_resources_tooltip"
            textbox = {
                size = { 125 24 }
                # [JournalEntry.MakeScope.Var('bpm_last_delta')|v-=2]
                text = "#yellow @attrition! Resources#!: [JournalEntry.MakeScope.Var('bpm_revolution_resource_amount').GetValue|v0]"
                fontsize = 16
                align = hcenter|nobaseline
                #multiline = yes
            }
            gold_progressbar_horizontal = {
                size = { 160 12 }

                blockoverride "values" {
                    # Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning'), '_organization')
                    value = "[JournalEntry.MakeScope.ScriptValue('bpm_resource_percentage')]"
                    min = 0
                    max = 1
                    #invertprogress = yes
                }
            }
        }
    }

    type participating_igs = widget {
        size = { 275 130 }
        block "visible" {
            visible = "[Not(IsDataModelEmpty(JournalEntry.MakeScope.GetList('bpm_planning_subversive_action_ig')))]"
        }
        background = {
            using = entry_bg_simple
        }
        margin = { 10 10 }
        widget = { 
            size = { 225 90 }
            parentanchor = hcenter|vcenter
            dynamicgridbox = {
                flipdirection = yes
                block "datamodel_wrap" {
                    datamodel_wrap = 5
                }

                margin = { 15 5 }
                #layoutpolicy_horizontal = expanding
                block "datamodel" {
                    datamodel = "[JournalEntry.MakeScope.GetList('bpm_planning_subversive_action_ig')]"
                }
                item = {
                    ig_icon = {
                        datacontext  = "[Scope.GetInterestGroup]"
                        visible = "[InterestGroup.IsValid]"
                        block "size" {
                            size = { 32 32 }
                        }
                        block "tooltip" {
							tooltipwidget = {
								FancyTooltip_IG = {}
							}
						}
                        blockoverride "in_government_icon" {}
                    }
                }

                #expand = {}
            }
        }
    }

    type participating_movs = widget {
        size = { 275 130 }
        block "visible" {
            visible = "[Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList(Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning').GetFlagName, '_movs'))))]"
        }
        background = {
            using = entry_bg_simple
        }
        margin = { 10 10 }
        widget = { 
            size = { 225 90 }
            parentanchor = hcenter|vcenter
            dynamicgridbox = {
                flipdirection = yes
                block "datamodel_wrap" {
                    datamodel_wrap = 5
                }

                margin = { 15 5 }
                #layoutpolicy_horizontal = expanding
                block "datamodel" {
                    datamodel = "[GetPlayer.MakeScope.GetList(Concatenate(JournalEntry.MakeScope.Var('bpm_front_currently_planning').GetFlagName, '_movs'))]"
                }
                item = {
                    icon = {
                        datacontext  = "[Scope.GetPoliticalMovement]"
                        visible = "[PoliticalMovement.IsValid]"
						block "tooltip" {
							tooltipwidget = {
								FancyTooltip_PoliticalMovement = {}
							}
						}
                        texture = "[PoliticalMovement.GetCoreIdeology.GetTexture]"
                        size = { 32 32 }
                    }
                }

                #expand = {}
            }
        }
    }

    type bpm_political_situation_crises_scandals = widget {
        size = { 350 300 }
        margin = { 10 0 }
        using = entry_bg_fancy_solid_bg
        datacontext = "[AccessPlayer.GetJournalEntry(JournalEntryType.Self)]"
        vbox = {
            background = {
                using = fade_right_entry_fancy_header_colored
                visible = "[JournalEntry.IsActive]"
                color = { 0.78 0.25 0.25 1 }
                margin = { 0 0 }
            }
            background = {
                using = fade_right_entry_fancy_header_colored
                visible = "[Not(JournalEntry.IsActive)]"
                color = { 0.78 0.78 0.25 1 }
                margin = { 0 0 }
            }
            hbox = {
                margin = { 15 0 }
                margin_top = 10
                layoutpolicy_horizontal = expanding
                icon = {
                    size = { 40 40 }
                    block "icon_texture" {
                        texture = "[JournalEntry.GetIcon]"
                    }
                }   
                textbox = {
                    size = { 230 40 }
                    block "action_name" {
                        text = "[JournalEntry.GetName]"
                    }
                    default_format = "#header"
                    block "action_tooltip" {
                        tooltip = "[JournalEntry.GetStatusDesc]"
                    }
                    fontsize = 18
                    align = hcenter|vcenter
                    parentanchor = left|top
                    #multiline = yes
                }
                expand = {} 
            }
            divider_decorative = {}

            textbox = {
                size = { 300 200 }
                visible = "[Not(JournalEntry.IsActive)]"
                text = "[JournalEntry.GetActivationTooltip]"
                fontsize = 16
                align = hcenter|top
                parentanchor = left|top
                multiline = yes
                margin = { 0 10 }
            }
            
            textbox = {
                visible = "[JournalEntry.IsActive]"
                size = { 300 140 }
                text = "[JournalEntry.GetInvalidationTooltip]"
                fontsize = 16
                align = hcenter|top
                parentanchor = left|top
                multiline = yes
                margin = { 0 10 }
            }
            
            #expand = {}

            divider_clean = {
                visible = "[JournalEntry.IsActive]"
            }

            hbox = {
                visible = "[JournalEntry.IsActive]"
                #margin = { 15 0 }
                layoutpolicy_horizontal = expanding
                textbox = {
                    size = { 300 40 }
                    text = "bpm_interface_effect_while_active"
                    fontsize = 16
                    align = hcenter|vcenter
                    parentanchor = left|top
                    #multiline = yes
                }
            }
            

            hbox = {

                datamodel = "[JournalEntry.GetTimedModifiers]"
                spacing = 5
                visible = "[Not(IsDataModelEmpty(JournalEntry.GetTimedModifiers))]"
                #parentanchor = vcenter|right
                #datamodel_wrap = 2
                margin = { 0 10 }
                margin_bottom = 10
                #margin_right = 30

                item = {
                    icon = {
                        tooltip = "[TimedModifier.GetTooltip]"
                        texture = "[TimedModifier.GetIcon]"
                        size = { 30 30 }
                        parentanchor = top
                    }
                }

            }



        }
    }


}
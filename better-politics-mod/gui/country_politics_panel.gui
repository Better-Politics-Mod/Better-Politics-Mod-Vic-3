# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types country_panel_types
{
	type country_panel_politics_content = flowcontainer {
		datacontext = "[CountryPanel.AccessCountry]"
		using = default_list_position
		direction = vertical
		minimumsize = { @panel_width -1 }
		maximumsize = { @panel_width -1 }
		margin_top = 10	
		
		### TOP INFO
		flowcontainer = {
			parentanchor = hcenter
			direction = vertical
			minimumsize = { @panel_width -1 }
			margin = { 0 10 }
			spacing = 10
			
			using = main_bg

			background = {
				texture = "gfx/interface/illustrations/government/government_illustration.dds"
				alpha = 0.2
				fittype = center
				using = frame_small_mask
				
				modify_texture = {
					texture = "gfx/interface/masks/fade_horizontal_center.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = alphamultiply
				}
			}
			
			textbox = {
				parentanchor = hcenter
				autoresize = yes
				size = { @panel_width 30 }
				text = "COUNTRY_GOVERNMENT_NO_LINE_BREAK"
				align = nobaseline
				elide = right
				using = fontsize_xl
			}

			flowcontainer = {
				spacing = 5
				parentanchor = hcenter
			
				### government					
				flowcontainer = {
					direction = vertical
					spacing = 5
					
					widget = {
						size = { 250 30 }
						parentanchor = hcenter
						
						background = {
							using = dark_area
							alpha = 0.35
						}
						
						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 5
							margin = { 10 0 }
						
							icon = {
								texture = "gfx/interface/icons/generic_icons/in_government_icon.dds"
								size = { 25 25 }
								tooltip = "[concept_in_government]"
							}	
							textbox = {
								layoutpolicy_horizontal = expanding
								text = "GOVERNMENT"
								align = left|nobaseline
								elide = right
								default_format = "#title"
							}
						}
					}
				
					fixedgridbox = {
						parentanchor = left
						datamodel = "[CountryPanel.AccessCountry.AccessInterestGroupsInGovernment]"
						datamodel_wrap = 4
						addcolumn = 65
						addrow = 65
						flipdirection = yes
						
						item = {
							widget = {
								size = { 65 65 }
								
								flowcontainer = {
									parentanchor = bottom
									margin_left = 25
									direction = vertical
									tooltip = "CLOUT_PIECHART"
									
									widget = {
										size = { 36 36 }
										parentanchor = hcenter
										
										ig_button = {
											size = { 100% 100% }
											blockoverride "in_government_icon"{}
										}
									}
									textbox = {
										text = "[InterestGroup.GetClout|%1]"
										autoresize = yes
										parentanchor = hcenter
									}
								}
							}
						}
					}
				}
			
				vertical_divider_full = {}
			
				### opposition
				flowcontainer = {
					direction = vertical
					spacing = 5
					
					widget = {
						size = { 250 30 }
						parentanchor = hcenter
						
						background = {
							using = dark_area
							alpha = 0.35
						}
						
						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 5
							margin = { 10 0 }
						
							icon = {
								texture = "gfx/interface/icons/generic_icons/in_opposition_icon.dds"
								size = { 25 25 }
								tooltip = "[concept_in_opposition]"
							}	
							textbox = {
								layoutpolicy_horizontal = expanding
								text = "OPPOSITION"
								align = left|nobaseline
								elide = right
								default_format = "#title"
							}
						}
					}
					
					fixedgridbox = {
						parentanchor = left
						datamodel = "[CountryPanel.AccessCountry.AccessInterestGroupsInOpposition]"
						datamodel_wrap = 4
						addcolumn = 65
						addrow = 65
						flipdirection = yes
						
						item = {
							widget = {
								size = { 65 65 }
								
								flowcontainer = {
									parentanchor = bottom
									margin_left = 25
									direction = vertical
									tooltip = "CLOUT_PIECHART"
									
									widget = {
										size = { 36 36 }
										parentanchor = hcenter
										
										ig_button = {
											size = { 100% 100% }
											blockoverride "in_government_icon"{}
										}
									}
									textbox = {
										text = "[InterestGroup.GetClout|%1]"
										autoresize = yes
										parentanchor = hcenter
									}
								}
							}
						}
					}
				}
			}			
		}

		widget = { size = { 10 10 } }

		### MOVEMENTS
		default_header = {
			parentanchor = hcenter
			blockoverride "text" {
				text = POLITICAL_MOVEMENTS
			}
		}	

		widget = { size = { 10 10 } }
		
		empty_state = {
			blockoverride "visible" {
				visible = "[IsDataModelEmpty(Country.AccessPoliticalMovements)]"
			}
			blockoverride "text" {
				text = "NO_POLITICAL_MOVEMENTS"
			}
		}	

		flowcontainer = {
			direction = vertical
			visible = "[Not(IsDataModelEmpty(Country.AccessPoliticalMovements))]"
			datamodel = "[Country.AccessPoliticalMovements]"
			parentanchor = hcenter
			spacing = 5		

			item = {
				country_panel_political_movement_item = {}
			}
		}
		
		widget = { size = { 10 10 } }

		### POLITICAL LOBBIES

		### MOVEMENTS
		default_header = {
			parentanchor = hcenter
			blockoverride "text" {
				text = POLITICAL_LOBBIES
			}
		}	

		widget = { size = { 10 10 } }

		empty_state = {
			blockoverride "visible" {
				visible = "[IsDataModelEmpty(Country.GetPoliticalLobbies)]"
			}
			blockoverride "text" {
				text = "NO_POLITICAL_LOBBIES"
			}
		}

		flowcontainer = {
			direction = vertical
			visible = "[Not(IsDataModelEmpty(Country.GetPoliticalLobbies))]"
			datamodel = "[Country.GetPoliticalLobbies]"
			parentanchor = hcenter
			spacing = 5		

			item = {
				political_lobby_list_item = {
					min_width = @panel_width_minus_10
				}
			}
		}

		widget = { size = { 10 10 } }

		### INSTITUTIONS
		default_header = {
			parentanchor = hcenter
			blockoverride "text" {
				text = INSTITUTIONS
			}
		}	

		widget = { size = { 10 10 } }

		flowcontainer = {
			direction = vertical
			visible = "[Not(IsDataModelEmpty(Country.AccessInstitutions))]"
			datamodel = "[Country.AccessInstitutions]"
			parentanchor = hcenter
			spacing = 8		

			item = {
				country_panel_institution_item = {}
			}
		}

		empty_state = {
			blockoverride "visible" {
				visible = "[IsDataModelEmpty(Country.AccessInstitutions)]"
			}
			blockoverride "text" {
				text = "NO_INSTITUTIONS"
			}
		}		
		
		widget = { size = { 10 10 } }

		### LAWS
		default_header = {
			parentanchor = hcenter
			blockoverride "text" {
				text = LAWS
			}
		}
		
		widget = { size = { 10 10 } }
		
		flowcontainer = {
			direction = horizontal
			
			textbox = {
				size = { 180 25 }
				align = center|nobaseline
				using = fontsize_large
				fontsize_min = 14
				elide = right
				
				text = "POWER_STRUCTURE"
			}		
			
			textbox = {
				size = { 180 25 }
				align = center|nobaseline
				using = fontsize_large
				fontsize_min = 14
				elide = right
				
				text = "ECONOMY"
			}
			
			textbox = {
				size = { 180 25 }
				align = center|nobaseline
				using = fontsize_large
				fontsize_min = 14
				elide = right
				
				text = "HUMAN_RIGHTS"
			}			
		}

		widget = { size = { 5 5 } }
		
		flowcontainer = {
			parentanchor = hcenter
			direction = horizontal
			spacing = 5
			
			flowcontainer = {
				direction = vertical
				visible = "[Not(IsDataModelEmpty(Country.AccessActivePowerStructureLaws))]"
				datamodel = "[Country.AccessActivePowerStructureLaws]"
				spacing = 5		

				item = {
	              	flowcontainer = {
	              		direction = vertical

				   		country_panel_law_item = {
				   			visible = "[Not(Law.IsBeingEnacted)]"
	                    	enabled = "[GreaterThan_int32(Law.GetGroup.GetNumImposeOptions( Country.Self ), '(int32)0')]"
	                 	}

	                 	country_panel_law_item_is_enacting = {
	                 		visible = "[Law.IsBeingEnacted]"
	                 	}
	              	}
				}
			}

			vertical_divider_full = {}
			
			flowcontainer = {
				direction = vertical
				visible = "[Not(IsDataModelEmpty(Country.AccessActiveEconomyLaws))]"
				datamodel = "[Country.AccessActiveEconomyLaws]"
				spacing = 5		

				item = {
	              	flowcontainer = {
	              		direction = vertical

				   		country_panel_law_item = {
				   			visible = "[Not(Law.IsBeingEnacted)]"
	                    	enabled = "[GreaterThan_int32(Law.GetGroup.GetNumImposeOptions( Country.Self ), '(int32)0')]"
	                 	}

	                 	country_panel_law_item_is_enacting = {
	                 		visible = "[Law.IsBeingEnacted]"
	                 	}
	              	}
				}
				
				background = {
					using = light_bg
					alpha = 0.5
					margin = { 5 0 }
					
					modify_texture = {
						texture = "gfx/interface/masks/fade_vertical_center.dds"
						spriteType = Corneredstretched
						blend_mode = alphamultiply
					}
				}
			}

			vertical_divider_full = {}			
			
			flowcontainer = {
				direction = vertical
				visible = "[Not(IsDataModelEmpty(Country.AccessActiveHumanRightsLaws))]"
				datamodel = "[Country.AccessActiveHumanRightsLaws]"
				spacing = 5		
				
				item = {
	              	flowcontainer = {
	              		direction = vertical
	              		
				   		country_panel_law_item = {
				   			visible = "[Not(Law.IsBeingEnacted)]"
	                    	enabled = "[GreaterThan_int32(Law.GetGroup.GetNumImposeOptions( Country.Self ), '(int32)0')]"
	                 	}

	                 	country_panel_law_item_is_enacting = {
	                 		visible = "[Law.IsBeingEnacted]"
	                 	}
	              	}
				}
			}			
		}

		widget = { size = { 10 10 } }

		### COMPANIES
		default_header = {
			parentanchor = hcenter
			blockoverride "text" {
				text = "COMPANIES"
			}
		}

		widget = { size = { 10 10 } }

		fixedgridbox = {
			datamodel = "[Country.GetCompanies]"
			parentanchor = hcenter
			addrow = 100
			addcolumn = @panel_width_half
			datamodel_wrap = 2
			flipdirection = yes

			item = {
				flowcontainer = {
					spacing = 10
					minimumsize = { 270 100 }
					maximumsize = { 270 100 }
					margin = { 10 10 }

					tooltipwidget = {
						FancyTooltip_Company = {}
					}

					background = {
						using = entry_bg_simple
					}

					icon = {
						size = { 80 80 }
						texture = "[Company.GetCompanyType.GetIcon]"

					}
					textbox = {
						text = "[Company.GetName]"
						maximumsize = { 160 80 }
						multiline = yes
						parentanchor = vcenter
						align = nobaseline
						autoresize = yes
						using = fontsize_large
						fontsize_min = 12
					}
				}
			}
		}

		empty_state = {
			blockoverride "visible" {
				visible = "[IsDataModelEmpty(Country.GetCompanies)]"
			}
			blockoverride "text" {
				text = "NO_COMPANIES"
			}
		}


		widget = { size = { 10 10 } }

		default_header = {
			parentanchor = hcenter
			blockoverride "text" {
				text = "POPULATION"
			}
		}	
		

		### Pop statistics
		flowcontainer = {
			direction = vertical
			margin_top = 10
			margin_bottom = 10
			spacing = 10

			flowcontainer = {
				direction = horizontal
				spacing = 10
				
				container = {
					minimumsize = { 265 -1 }
					maximumsize = { 265 -1 }
					parentanchor = vcenter
				
					background = {
						using = entry_bg
					}
					
					flowcontainer = {
						margin = { 5 10 }
						spacing = 5
						parentanchor = center
						using = population_tooltip_with_graph

						icon = {
							texture = "gfx/interface/icons/generic_icons/population.dds"
							size = { 25 25 }
						}
						
						textbox = {
							text = "concept_population"
							autoresize = yes
							using = fontsize_large
							align = nobaseline
							parentanchor = vcenter
							max_width = 150
							fontsize_min = 14
							elide = right
						}

						textbox = {
							raw_text = " #variable [Country.GetTotalPopulation|D]#!"
							autoresize = yes
							using = fontsize_large
							align = nobaseline
							parentanchor = vcenter
						}
					}

				}

				textbox = {
					minimumsize = { 265 -1 }
					maximumsize = { 265 -1 }
					margin = { 20 9 }
					background = {
						using = entry_bg
					}
					using = average_standard_of_living_tooltip_with_graph
					text = "COUNTRY_SOL_ALL_LABEL"
					autoresize = yes
					using = fontsize_large
					parentanchor = vcenter
					align = hcenter|nobaseline
					fontsize_min = 14
					elide = right
				}

			}

			flowcontainer = {
				direction = horizontal
				spacing = 10
				
				container = {
					minimumsize = { 265 -1 }
					maximumsize = { 265 -1 }
					parentanchor = vcenter
				
					background = {
						using = entry_bg
					}
					
					flowcontainer = {
						margin = { 5 10 }
						spacing = 5
						parentanchor = center
						tooltip = "POLITICALLY_INVOLVED_POPULATION_TOOLTIP"
					
						textbox = {
							text = "concept_politically_involved"
							autoresize = yes
							using = fontsize_large
							align = nobaseline
							parentanchor = vcenter
							max_width = 170
							fontsize_min = 14
							elide = right
						}

						textbox = {
							raw_text = " #variable [Country.GetPoliticallyInvolvedPopulation|D]#!"
							autoresize = yes
							using = fontsize_large
							align = nobaseline
							parentanchor = vcenter
						}
					}
				}

				container = {
					minimumsize = { 265 -1 }
					maximumsize = { 265 -1 }
					parentanchor = vcenter
				
					background = {
						using = entry_bg
					}
					
					flowcontainer = {
						margin = { 5 10 }
						spacing = 5
						parentanchor = center
						tooltip = "POLITICALLY_UNALIGNED_POPULATION_TOOLTIP"
						
						textbox = {
							text = "concept_politically_unaligned"
							autoresize = yes
							using = fontsize_large
							align = nobaseline
							parentanchor = vcenter
							max_width = 170
							fontsize_min = 14
							elide = right
						}

						textbox = {
							raw_text = " #variable [Country.GetInactivePopulation|D]#!"
							autoresize = yes
							using = fontsize_large
							align = nobaseline
							parentanchor = vcenter
						}
					}
				}
			}
		}

		button = {
			parentanchor = hcenter
			using = default_button
			text = "POP_BROWSER"
			align = hcenter|nobaseline
			size = { @panel_width 50 }
			using = fontsize_large
			onclick = "[InformationPanelBar.OpenPopBrowserPanel( Country.Self )]"
		}		
	}
	
	### LAW ITEM WITH IMPOSE OPTION
	type country_panel_law_item = button {
		size = { 170 65 }
		onclick = "[RightClickMenuManager.ShowForImposeLaw(Law.AccessSelf)]"
		
		using = default_button

		tooltipwidget = {
			FancyTooltip_Law = {
				blockoverride "text_before" {
   				visible = "[Not(GreaterThan_int32(Law.GetGroup.GetNumImposeOptions( Country.Self ), '(int32)0'))]"
   				text =  "IMPOSE_LAW_NO_OPTIONS"
   				margin_bottom = 15
   			}
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			spacing = 5
			margin = { 8 0 }
		
			law_icon = {
				size = { 40 40 }
			}		
			
			textbox = {
				layoutpolicy_horizontal = expanding
				align = center|nobaseline
				fontsize_min = 10
				multiline = yes
				
				text = "[Law.GetNameNoFormatting]"
			}
		}
		
		### Number of impose options available shows in the corner of the button
		textbox = {
			raw_text = "#bold [Law.GetGroup.GetNumImposeOptions( Country.Self )]#!"
			parentanchor = top|right
			position = { -5 0 }
			autoresize = yes
			align = right|nobaseline
			visible = "[GreaterThan_int32(Law.GetGroup.GetNumImposeOptions( Country.Self ), '(int32)0')]"
			using = fontsize_small
			background = {
				using = default_background
				margin = { 8 4 }
			}
		}
	}

	### LAW ITEM
	type country_panel_law_item_is_enacting = widget {
		size = { 170 65 }
		
		tooltipwidget = {
			FancyTooltip_Law = {
				blockoverride "text_before" {
   				text =  "LAW_BEING_ENACTED_DESC"
   				margin_bottom = 15
   			}
			}
		}


		hbox = {
			layoutpolicy_horizontal = expanding
			spacing = 5
			margin = { 8 0 }

			icon = {
				size = { 54 54 }
				texture = "gfx/interface/backgrounds/round_button_bg.dds"
				
				round_progress_default = {
					size = { 48 48 }
					value = "[FixedPointToFloat(Country.GetLawEnactmentProgress)]"
					parentanchor = center
				}
				
				law_icon = {
					size = { 45 45 }
					parentanchor = center
				}
			}
			
			textbox = {
				layoutpolicy_horizontal = expanding
				align = center|nobaseline
				fontsize_min = 10
				multiline = yes
				
				text = "[Law.GetNameNoFormatting]"
			}
		}

		background = { 
			using = paper_bg 
		}

		icon = {
			using = highlighted_square_selection
		}

	}
	
	### MOVEMENT ITEM
	type country_panel_political_movement_item = widget {
		size = { @panel_width_minus_10 55 }
		
		background = {		
			using = dark_area 	
		}
		
		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 5 0 }
			spacing = 5
			
			law_icon = {
				datacontext = "[PoliticalMovement.GetLaw]"
				size = { 50 50 }
			} 
		
			vbox = {
				layoutpolicy_horizontal = expanding
				spacing = 2
				
				textbox = {
					layoutpolicy_horizontal = expanding
					size = { 0 20 }
					align = center|nobaseline
					elide = right
					fontsize_min = 12
					
					text = "[PoliticalMovement.GetName]"
					
					background = {
						using = dark_area
						alpha = 0.3
						margin_bottom = 4
						margin_top = 2
						
						modify_texture = {
							texture = "gfx/interface/masks/fade_horizontal_center.dds"
							blend_mode = alphamultiply
						}
					}
				}
				
				hbox = {
					layoutpolicy_horizontal = expanding
					
					hbox = {
						layoutpolicy_horizontal = preferred
						layoutpolicy_vertical = preferred
						visible = "[Not(IsDataModelEmpty(PoliticalMovement.GetSupportingInterestGroups))]"
						datamodel = "[PoliticalMovement.GetSupportingInterestGroups]"

						item = {
							ig_button = {
								size = { 25 25 }
								tooltip = "CLOUT_PIECHART"
							}
						}
					}

					textbox = {
						layoutpolicy_horizontal = expanding
						size = { 0 20 }
						align = center|nobaseline
						elide = right
						fontsize_min = 12
						
						text = "POLITICAL_MOVEMENT_SUPPORT_WITH_LABEL"
						tooltip = "POLITICAL_MOVEMENT_SUPPORT_TOOLTIP"
					}

					textbox = {
						layoutpolicy_horizontal = expanding
						size = { 0 20 }
						align = center|nobaseline
						elide = right
						fontsize_min = 12
						
						visible = "[Not(PoliticalMovement.IsPlacated)]"
						text = "POLITICAL_MOVEMENT_RADICALISM_WITH_LABEL"
						tooltip = "POLITICAL_MOVEMENT_RADICALISM_TOOLTIP"
					}

					textbox = {
						layoutpolicy_horizontal = expanding
						size = { 0 20 }
						align = center|nobaseline
						elide = right
						fontsize_min = 12
						
						visible = "[PoliticalMovement.IsPlacated]"
						text = "[concept_political_movement_placated]"
					}
				}
			}
		}
	}
	
	### INSTITUTION ITEM
	type country_panel_institution_item = widget {
		size = { @panel_width_minus_10 40 }
		
		background = {		
			using = entry_bg	
		}		

		institution_icon = {
			size = { 50 50 }
			position = { 5 0 }
			parentanchor = vcenter
			alwaystransparent = yes
		}										
		
		textbox = {
			parentanchor = vcenter
			position = { 60 0 }
			autoresize = yes
			align = left|nobaseline
			using = fontsize_large
			text = "[Institution.GetName]"
			alwaystransparent = yes
		}		
		
		textbox = {
			position = { -10 0 }
			autoresize = yes
			parentanchor = right|vcenter
			align = right|nobaseline
			elide = right
			using = fontsize_large
			text = "INSTITUTION_INVESTMENT_LEVEL"
		}

		widget = {
			size = { 100% 100% }
			
			tooltipwidget = {
				FancyTooltip_Institution = {}
			}
		}		
	}
}

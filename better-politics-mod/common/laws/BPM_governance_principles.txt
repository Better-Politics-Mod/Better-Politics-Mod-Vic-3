# group = this is the law_group a law belongs to
# icon = graphical icon shown in-game
# modifier = {} modifier on country for having adopted this law

law_monarchy = {
	group = lawgroup_governance_principles
	
	icon = "gfx/interface/icons/law_icons/monarchy.dds"
	
	progressiveness = 0

	disallowing_laws = {
		law_anarchy
	}

	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_governance_principles_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}

	modifier = {
		country_legitimacy_headofstate_add = 10
		country_aristocrats_pol_str_mult = 0.25
		country_authority_add = 200
		country_rigidity_baseline_add = 10
		country_bpm_ruler_partial_veto_enabled = yes
	}

	possible_political_movements = {
		law_presidential_republic
		law_parliamentary_republic
		law_council_republic
	}
	
	pop_support = {
		value = 0	
		add = {
			desc = "POP_ARISTOCRATS"
			if = {
				limit = { 
					is_pop_type = aristocrats
				}
				value = 0.33
			}
		}
	}
	
	ai_will_do = {
		exists = ruler
		ruler = {
			has_monarchist_ideology = yes
		}
		bpm_country_is_in_new_world = no
	}

	on_activate = {
		if = {
			limit = {
				has_law = law_type:law_party_anti_reactionary
			}
			deactivate_law = law_type:law_party_anti_reactionary
			bpm_deactivate_syndicalism = yes
		}
		if = {
			limit = {
				c:FRA ?= this
				NOT = {
					has_variable = one_true_french_dynasty
				}
				has_dlc_feature = voice_of_the_people_content
				game_date > 1836.1.1
			}
			if = {
				limit = {
					has_variable = fra_divided_monarchists_freeze
				}
				remove_variable = fra_divided_monarchists_freeze
			}
			add_journal_entry = { type = je_divided_monarchists }
		}
		# Generates French monarch upon enaction.
		hidden_effect = {
			if = {
				limit = {
					c:FRA ?= this
					NOT = {
						has_variable = one_true_french_dynasty
					}
					has_dlc_feature = voice_of_the_people_content
					game_date > 1836.1.1
					NOR = {
						ruler_is_bonapartist = yes
						ruler_is_orleanist = yes
						ruler_is_legitimist = yes
					}
				}
				fra_handle_republic_monarch_assignment = yes
			}
		}
	}

	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}

	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_monarchy
				has_strategy = ai_strategy_reactionary_agenda
				power_bloc ?= { has_identity = identity:identity_ideological_union }
				scope:target_country = { # Is their law different enough from what we want to impose?
					NOT = { has_law = law_type:law_theocracy }
				}				
			}
			
			add = base_impose_law_weight	
			if = {
				limit = { 
					scope:target_country = { has_law = law_type:council_republic } 
					NOT = { has_strategy = ai_strategy_egalitarian_agenda }
				}
				multiply = 5
			}	
			else = {
				multiply = 0.5 # AI is less likely to mess with governance principles unless dealing with council republics
			}
		}
	}
}

law_presidential_republic = {
	group = lawgroup_governance_principles
	
	icon = "gfx/interface/icons/law_icons/presidential_republic.dds"
	
	progressiveness = 100
	
	unlocking_technologies = {
		democracy
	}

	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_governance_principles_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}

	is_visible = {
		NOT = {
			has_law = law_type:law_parliamentary_republic
		}
	}

	on_activate = {
		if = {
			limit = {
				has_variable = fra_republic_counter
			}
			change_variable = {
				name = fra_republic_counter
				add = 1
			}
		}
		scripted_effect_parties_emergence = yes
		bpm_deactivate_syndicalism = yes
	}
	
	modifier = {
		country_bureaucrats_voting_power_add = 5
		country_legitimacy_headofstate_add = 10
		country_legitimacy_govt_total_votes_add = 10
		country_authority_add = 100
		country_legitimacy_ideological_incoherence_mult = 0.2
	}
	
	pop_support = {
		value = 0

		add = {
			desc = "POP_ANGRY_UNSTABLE"
			
			if = {
				limit = { 
					owner = { 
						var:bpm_political_stability <= 33	
					}
					NOT = { strata = rich }
				}
				add = {
					value = pop_radical_fraction
				}
			}
		}		
	}
	
	possible_political_movements = {
		law_council_republic
	}
	
	ai_will_do = {
		exists = ruler
		ruler = {
			OR = {
				bpm_leader_is_republican_liberal = yes
				interest_group = { bpm_ig_is_republican = yes }
			}
		}
	}

	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}

		if = {
			limit = {
				has_journal_entry = je_pedro_republic
			}
			add = 100
		}
	}

	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_presidential_republic
				has_strategy = ai_strategy_progressive_agenda
				power_bloc ?= { has_identity = identity:identity_ideological_union }
				scope:target_country = { # Is their law different enough from what we want to impose?
					NOT = { has_law = law_type:law_parliamentary_republic }
				}				
			}
			
			add = base_impose_law_weight
			if = {
				limit = { 
					scope:target_country = { has_law = law_type:council_republic } 
					NOT = { has_strategy = ai_strategy_egalitarian_agenda }
				}
				multiply = 5
			}	
			else = {
				multiply = 0.5 # AI is less likely to mess with governance principles unless dealing with council republics
			}
		}
	}
}

law_parliamentary_republic = {
	group = lawgroup_governance_principles
	
	icon = "gfx/interface/icons/law_icons/parliamentary_republic.dds"
	
	progressiveness = 100
	
	unlocking_technologies = {
		democracy
	}
	
	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_governance_principles_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}

	on_activate = {
		if = {
			limit = {
				has_variable = fra_republic_counter
			}
			change_variable = {
				name = fra_republic_counter
				add = 1
			}
		}
		scripted_effect_parties_emergence = yes
		bpm_deactivate_syndicalism = yes
	}

	is_visible = {
		has_law = law_type:law_parliamentary_republic
	}

	modifier = {
		country_bureaucrats_voting_power_add = 5
		country_legitimacy_govt_total_votes_add = 10
		country_legitimacy_govt_size_add = 1
	}
	
	possible_political_movements = {
		law_council_republic
	}
	
	ai_will_do = {
		exists = ruler
		ruler = {
			OR = {
				bpm_leader_is_republican_liberal = yes
				interest_group = { bpm_ig_is_republican = yes }
			}
		}
	}

	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}

	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_parliamentary_republic
				has_strategy = ai_strategy_progressive_agenda
				power_bloc ?= { has_identity = identity:identity_ideological_union }
				scope:target_country = { # Is their law different enough from what we want to impose?
					NOT = { has_law = law_type:law_presidential_republic }
				}				
			}
			
			add = base_impose_law_weight
			if = {
				limit = { 
					scope:target_country = { has_law = law_type:council_republic } 
					NOT = { has_strategy = ai_strategy_egalitarian_agenda }
				}
				multiply = 5
			}		
			else = {
				multiply = 0.5 # AI is less likely to mess with governance principles unless dealing with council republics
			}
		}
	}
}

law_theocracy = {
	group = lawgroup_governance_principles
	
	icon = "gfx/interface/icons/law_icons/theocracy.dds"
	
	progressiveness = -50

	disallowing_laws = {
		law_total_separation 
	}

	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_governance_principles_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}

	on_activate = {
		if = {
			limit = {
				has_law = law_type:law_party_anti_reactionary
			}
			deactivate_law = law_type:law_party_anti_reactionary
		}
		bpm_deactivate_syndicalism = yes
	}

	modifier = {
		country_legitimacy_headofstate_add = 20
		interest_group_ig_devout_pol_str_mult = 0.25
		country_authority_add = 200
	}
	
	possible_political_movements = {
		law_monarchy
		law_presidential_republic
		law_parliamentary_republic
		law_council_republic
	}

	pop_support = {
		value = 0
		
		add = {
			desc = "POP_CLERGYMEN"
			if = {
				limit = { 
					is_pop_type = clergymen
				}
				value = 0.33
			}
		}
	}
	
	ai_will_do = {
		always = no
	}

	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_theocracy
				has_strategy = ai_strategy_reactionary_agenda
				power_bloc ?= { has_identity = identity:identity_religious }
				religion = scope:target_country.religion
				scope:target_country = { # Is their law different enough from what we want to impose?					
					NOT = { has_law = law_type:law_monarchy }
				}				
			}
			
			add = base_impose_law_weight
			if = {
				limit = { 
					scope:target_country = { has_law = law_type:council_republic } 
					NOT = { has_strategy = ai_strategy_egalitarian_agenda }
				}
				multiply = 5
			}		
			else = {
				multiply = 0.5 # AI is less likely to mess with governance principles unless dealing with council republics
			}
		}
	}
}

law_council_republic = {
	group = lawgroup_governance_principles
	
	icon = "gfx/interface/icons/law_icons/council_republic.dds"
	
	progressiveness = 200

	unlocking_technologies = {
		socialism
	}

	can_enact = {
		has_technology_researched = socialism
		custom_tooltip = {
			text = "bpm_first_intl_happened"
			has_global_variable = first_intl_chain_complete_var
		}
	}

	on_activate = {
		custom_tooltip = {
			text = enact_law_radical_leftist_government_warning_desc
		}
		scripted_effect_parties_emergence = yes
		if = {
			limit = {
				has_law = law_type:law_party_anti_socialist
			}
			deactivate_law = law_type:law_party_anti_socialist
		}
		ig:ig_agrarian_populists ?= {
			bpm_remove_all_gov_ideologies = yes
			add_ideology = ideology_gov_radical_proletarian
			bpm_remove_all_eco_ideologies = yes
			add_ideology = ideology_eco_agrarian_socialist
			bpm_reorder_ideologies = yes
		}
	}

	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_governance_principles_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}

	modifier = {
		country_legitimacy_govt_total_votes_add = 10
		country_bureaucrats_voting_power_add = 10
		country_legitimacy_govt_size_add = 1
		state_political_strength_from_wealth_mult = -0.1
	}
	
	possible_political_movements = {
		law_presidential_republic
		law_parliamentary_republic
	}
	
	pop_support = {
		value = 0

		add = {
			desc = "POP_ANGRY_UNSTABLE"
			
			if = {
				limit = { 
					owner = { 
						var:bpm_political_stability <= 33	
					}
					NOT = { strata = rich }
				}
				add = {
					value = pop_radical_fraction
				}
			}
		}		
	}
	
	ai_will_do = {
		exists = ruler
		OR = {
			ruler = {
				OR = {
					bpm_leader_is_radical_socialist = yes
					interest_group = { bpm_ig_is_radical_socialist = yes }
				}
			}
			any_interest_group = {
				bpm_ig_is_radical_socialist = yes
				is_powerful = yes
				is_in_government = yes
			}
		}
	}

	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}

		if = {
			limit = {
				OR = {
					AND = {
						exists = ruler
						ruler = {
							OR = {
								bpm_leader_is_radical_socialist = yes
								interest_group = { bpm_ig_is_radical_socialist = yes }
							}
						}
					}
					any_interest_group = {
						bpm_ig_is_radical_socialist = yes
						is_powerful = yes
						is_in_government = yes
					}
				}
			}
			add = 1000
		}
	}

	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_council_republic
				has_strategy = ai_strategy_egalitarian_agenda				
			}
			
			add = base_impose_law_weight
			multiply = 5.0
		}
	}
}

bpm_electoral_weight = {
	if = {
		limit = {
			owner = { has_law = law_type:law_census_voting }
		}
		value = literacy_rate
	}
	else_if = {
		limit = {
			owner = { has_law = law_type:law_wealth_voting }
		}
		value = standard_of_living
		subtract = state.modifier:state_standard_of_living_add
		if = {
			limit = {
				standard_of_living <= 20
			}
			value = 0
		}
	}
	else_if = {
		limit = {
			owner = { has_law = law_type:law_universal_suffrage }
		}
		value = 1
	}
	else_if = {
		limit = {
			owner = { has_law = law_type:law_landed_voting }
		}
		value = 0
		if = {
			limit = {
				OR = {
					is_pop_type = clergymen
					is_pop_type = capitalists
				}
			}
			value = 1
		}
		else_if = {
			limit = {
				is_pop_type = aristocrats
			}
			value = 3
		}
	}
}

bpm_total_electorate = {
	value = 0
	every_scope_pop = {
		add = {
			value = total_size
			multiply = bpm_electoral_weight
		}
	}
}

#+================+
#| bpm_issue_sol  |
#+================+

bpm_issue_sol_interest = {
	value = 0
	add = {
		value = bpm_issue_sol_interest_peasantry
		multiply = bpm_issue_sol_interest_peasantry_weight
	}
	add = {
		value = bpm_issue_sol_interest_workers
		multiply = bpm_issue_sol_interest_workers_weight
	}
	add = {
		value = bpm_issue_sol_interest_professionals
		multiply = bpm_issue_sol_interest_professionals_weight
	}
	add = {
		value = bpm_issue_sol_interest_soldiers
		multiply = bpm_issue_sol_interest_soldiers_weight
	}
}



# PEASANTRY
bpm_issue_sol_interest_peasantry = { 
	value = 0
	every_scope_pop = {
		limit = {
			is_pop_type = peasants
		}
		if = {
			limit = {
				standard_of_living < state.average_expected_sol
			}
			add = total_size
		}
	}
	divide = {
		value = 0
		every_scope_pop = {
			limit = {
				is_pop_type = peasants
			}
			add = total_size
		}
		min = 1
	}
}

bpm_issue_sol_interest_peasantry_weight = {
	value = 0
	every_scope_pop = {
		limit = {
			is_pop_type = peasants
		}
		add = {
			value = total_size
			multiply = bpm_electoral_weight
		}
	}
	divide = bpm_total_electorate
}

# WORKERS
bpm_issue_sol_interest_workers = {
	value = 0
	every_scope_pop = {
		limit = {
			OR = {
				is_pop_type = laborers
				is_pop_type = machinists
			}
		}
		if = {
			limit = {
				standard_of_living < state.average_expected_sol
			}
			add = total_size
		}
	}
	divide = {
		value = 0
		every_scope_pop = {
			limit = {
				OR = {
					is_pop_type = laborers
					is_pop_type = machinists
				}
			}
			add = total_size
		}
		min = 1
	}
}

bpm_issue_sol_interest_workers_weight = {
	value = 0
	every_scope_pop = {
		limit = {
			OR = {					
				is_pop_type = laborers
				is_pop_type = machinists
			}
		}
		add = {
			value = total_size
			multiply = bpm_electoral_weight
		}
	}
	divide = bpm_total_electorate
}

# PROFESSIONALS
bpm_issue_sol_interest_professionals = {
	value = 0
	every_scope_pop = {
		limit = {
			OR = {
				is_pop_type = clerks
				is_pop_type = engineers
				is_pop_type = academics
				is_pop_type = engineers
			}
		}
		if = {
			limit = {
				standard_of_living < state.average_expected_sol
			}
			add = total_size
		}
	}
	divide = {
		value = 0
		every_scope_pop = {
			limit = {
				OR = {
					is_pop_type = clerks
					is_pop_type = engineers
					is_pop_type = academics
					is_pop_type = engineers
				}
			}
			add = total_size
		}
		min = 1
	}
}

bpm_issue_sol_interest_professionals_weight = {
	value = 0
	every_scope_pop = {
		limit = {
			OR = {
				is_pop_type = clerks
				is_pop_type = engineers
				is_pop_type = academics
			}
		}
		add = {
			value = total_size
			multiply = bpm_electoral_weight
		}
	}
	divide = bpm_total_electorate
}

# SOLDIERS
bpm_issue_sol_interest_soldiers = {
	value = 0
	every_scope_pop = {
		limit = {
			OR = {
				is_pop_type = soldiers
			}
		}
		if = {
			limit = {
				standard_of_living < state.average_expected_sol
			}
			add = total_size
		}
	}
	divide = {
		value = 0
		every_scope_pop = {
			limit = {
				OR = {
					is_pop_type = soldiers
				}
			}
			add = total_size
		}
		min = 1
	}
}

bpm_issue_sol_interest_soldiers_weight = {
	value = 0
	every_scope_pop = {
		limit = {
			is_pop_type = soldiers
		}
		add = {
			value = total_size
			multiply = bpm_electoral_weight
		}
	}
	divide = bpm_total_electorate
}

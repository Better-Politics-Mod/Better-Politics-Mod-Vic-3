types political_situation_types { 
    type bpm_political_situation_dissent_panel = vbox {
		visible = "[GetVariableSystem.Exists('politics_overview_dissent_panel')]"
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = growing
		spacing = 10
		margin = { 40 10 }

        hbox = {
            name = "tutorial_highlight_government_title"
            spacing = 5
            margin = { 5 8 }
            layoutpolicy_horizontal = preferred

            back_button_large = {
                parentanchor = left|top
                block "header_back_button" {
                    onclick = "[GetVariableSystem.Toggle('politics_overview_dissent_panel')]"
                    input_action = "back"
                }
            }
            
            background = {
                using = default_header_bg_faded
            }
            
            textbox = {
                layoutpolicy_horizontal = expanding
                size = { 0 30 }
                raw_text = "Dissent Situation"
                align = hcenter|nobaseline
                elide = right
                using = fontsize_xxl
                margin_left = 5
            }



        }


        fullscreen_scrollarea = {
            using = default_fade_in_out
            blockoverride "scrollarea_content" {
                vbox = {
                    ## State Institutional Interest Groups
                    bpm_political_situation_ig_type = {
                        blockoverride "visible1" {
                            visible = "[And(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End), Not(GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)))]"
                        }
                        blockoverride "visible2" {
                            visible = "[And(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End), GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End))]"
                        }
                    }
                    
                    bpm_political_situation_ig_type = {
                        blockoverride "visible1" {
                            visible = "[And(Not(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), And(GetScriptedGui('bpm_ig_is_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End), Not(GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End))))]"
                        }
                        blockoverride "visible2" {
                            visible = "[And(Not(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), And(GetScriptedGui('bpm_ig_is_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End), GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)))]"
                        }
                        blockoverride "text" {
                            text = "#header [concept_bpm_institutional_ig]#!"
                        }
                    }

                    bpm_political_situation_ig_type = {
                        blockoverride "visible1" {
                            visible = "[And(Not(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), And(Not(GetScriptedGui('bpm_ig_is_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), Not(GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End))))]"
                        }
                        blockoverride "visible2" {
                            visible = "[And(Not(GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), And(Not(GetScriptedGui('bpm_ig_is_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)), GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)))]"
                        }
                        blockoverride "text" {
                            text = "#header [concept_bpm_ideological_ig]#!"
                        }
                    }

                    textbox = {
                        size = { 285 60 }
                        text = "Active Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }


                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_dissent').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetActiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_subversive_actions = { }
                                }
                            }
                        }
                    }

                    divider_decorative = {}

                    textbox = {
                        size = { 285 60 }
                        text = "Potential Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }


                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForInActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_dissent').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                #datamodel = "[GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_subversive_actions = { }
                                }
                            }
                        }
                        expand = {}
                    }

                    expand = {}
                }
            }

        }

        expand = {}
	}

    type bpm_political_situation_crises_panel = vbox {
		visible = "[GetVariableSystem.Exists('politics_overview_crises_panel')]"
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = growing
		spacing = 10
		margin = { 40 10 }

        hbox = {
            name = "tutorial_highlight_government_title"
            spacing = 5
            margin = { 5 8 }
            layoutpolicy_horizontal = preferred

            back_button_large = {
                parentanchor = left|top
                block "header_back_button" {
                    onclick = "[GetVariableSystem.Toggle('politics_overview_crises_panel')]"
                    input_action = "back"
                }
            }
            
            background = {
                using = default_header_bg_faded
            }
            
            textbox = {
                layoutpolicy_horizontal = expanding
                size = { 0 30 }
                raw_text = "Crises Situations"
                align = hcenter|nobaseline
                elide = right
                using = fontsize_xxl
                margin_left = 5
            }



        }

        fullscreen_scrollarea = {
            using = default_fade_in_out
            blockoverride "scrollarea_content" {
                vbox = {

                    textbox = {
                        size = { 285 60 }
                        text = "Active Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }

                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_crises').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetActiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_crises_scandals = { }
                                }
                            }
                        }
                    }

                    divider_decorative = {}

                    textbox = {
                        size = { 285 60 }
                        text = "Potential Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }


                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForInActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_crises').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                #datamodel = "[GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_crises_scandals = { }
                                }
                            }
                        }
                        expand = {}
                    }

                    expand = {}
                }
            }

        }

        expand = {}
	}

    type bpm_political_situation_scandals_panel = vbox {
		visible = "[GetVariableSystem.Exists('politics_overview_scandals_panel')]"
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = growing
		spacing = 10
		margin = { 40 10 }

        hbox = {
            name = "tutorial_highlight_government_title"
            spacing = 5
            margin = { 5 8 }
            layoutpolicy_horizontal = preferred

            back_button_large = {
                parentanchor = left|top
                block "header_back_button" {
                    onclick = "[GetVariableSystem.Toggle('politics_overview_scandals_panel')]"
                    input_action = "back"
                }
            }
            
            background = {
                using = default_header_bg_faded
            }
            
            textbox = {
                layoutpolicy_horizontal = expanding
                size = { 0 30 }
                raw_text = "Scandal Situations"
                align = hcenter|nobaseline
                elide = right
                using = fontsize_xxl
                margin_left = 5
            }



        }

        fullscreen_scrollarea = {
            using = default_fade_in_out
            blockoverride "scrollarea_content" {
                vbox = {

                    textbox = {
                        size = { 285 60 }
                        text = "Active Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }

                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_scandals').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetActiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_crises_scandals = { }
                                }
                            }
                        }
                    }

                    divider_decorative = {}


                    textbox = {
                        size = { 285 60 }
                        text = "Potential Situations"
                        fontsize = 20
                        default_format = "#header"
                        align = hcenter
                        multiline = yes
                        margin = { 0 10 }
                    }

                    flowcontainer = {
                        #parentanchor = hcenter
                        direction = horizontal
                        spacing = 10

                        spacing = 10
                        margin = { 10 10 }

                        datamodel = "[AccessPlayer.GetGroupsForInActiveJournalEntries]"

                        #visible = "Not(IsDataModelEmpty(GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)))"
                        item = {
                            dynamicgridbox = {
                                spacing = 10
                                #parentanchor = hcenter
                                visible = "[ObjectsEqual(MakeScopeFlag(GetJournalEntryGroup('je_group_bpm_scandals').GetName), MakeScopeFlag(JournalEntryGroup.GetName))]"
                                datamodel = "[JournalEntryGroup.GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                #datamodel = "[GetJournalEntryGroup('je_group_bpm_dissent').GetInactiveJournalEntryTypes(GetPlayer.Self)]"
                                flipdirection = yes
                                block "datamodel_wrap" {
                                    datamodel_wrap = 5
                                }
                                item = {
                                    bpm_political_situation_crises_scandals = { }
                                }
                            }
                        }
                        expand = {}
                    }

                    expand = {}
                    
                }
            }

        }

        expand = {}
	}

    type bpm_political_situation_ig_type = hbox {
        layoutpolicy_horizontal = expanding 

        maximumsize = { -1 120 }
        spacing = 10
        background = {
            using = entry_bg_simple
        }

        #layoutpolicy_vertical = growing

        textbox = {
            size = { 180 120 }
            block "text" {
                text = "BPM_STATE_INSTITUTIONAL_IG"
            }
            using = fontsize_large
            align = left|vcenter
            parentanchor = left|vcenter
            multiline = yes
            margin = { 15 5 }
        }



        vertical_divider = {}

        widget = {
            size = { 745 100% }
            hbox = {
                margin = { 20 5 }
                background = {
					using = fade_center_colored
					color = { 0.54 0.78 0.33 1 }
					margin = { 10 5 }
				}
                icon = {
                    name = "type_icon"
                    size = { 40 40 }
                    texture = "gfx/interface/icons/political_lobby_icons/lobby_pro.dds"
                    tooltip = "BPM_NOT_PLANNING_SUBVERSIVE"
                }
                expand = {}

                flowcontainer = {
                    margin = { 20 5 }
                    direction = horizontal
                    #layoutpolicy_horizontal = growing 
                    datamodel_wrap = 2
                    ignoreinvisible = yes

                    spacing = 25

                    datamodel = "[AccessPlayer.AccessAllInterestGroups]"

                    item = {
                        container = {
                            block "visible1" {}
                            ig_icon = {
                                #visible = "[Not(GreaterThan_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)7'))]"
                                #visible = "[GetScriptedGui('bpm_ig_is_state_institutional_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)]"
                                size = { 40 40 }
                                blockoverride "tooltip" {}
                                blockoverride "in_government_icon" {}
                            }   
                        }
                    }
                }

                expand = {}
            }
        }

        vertical_divider = {}
        widget = {
            size = { 740 100% }
            background = {
                using = fade_center_colored
                color = { 0.78 0.25 0.25 1 }
                margin = { 10 5 }
            }

            
            hbox = {
                margin = { 20 5 }


                icon = {
                    name = "type_icon"
                    size = { 40 40 }
                    texture = "gfx/interface/icons/political_lobby_icons/lobby_anti.dds"
                    tooltip = "BPM_PLANNING_SUBVERSIVE"
                    parentanchor = right
                }
                expand = {}

                flowcontainer = {
                    margin = { 20 5 }
                    direction = horizontal
                    #layoutpolicy_horizontal = growing 
                    datamodel_wrap = 2
                    ignoreinvisible = yes

                    spacing = 25

                    datamodel = "[AccessPlayer.AccessAllInterestGroups]"

                    item = {
                        container = {
                            block "visible2" {}
                            ig_icon = {
                                #visible = "[Not(GreaterThan_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)7'))]"
                                #visible = "[Not(GreaterThan_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)7'))]"
                                #visible = "[GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)]"
                                size = { 40 40 }
                                blockoverride "tooltip" {}
                                blockoverride "in_government_icon" {}
                            }   
                        }
                    }
                }

                expand = {}
            }
        }


        expand = {}
    }

	type bpm_political_situation_buttons = widget {
		size = { 400 220 }

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

            button = {
				using = default_button
				size = { 360 40 }
				raw_text = "Scandals"
				onclick = "[GetVariableSystem.Toggle('politics_overview_scandals_panel')]"
			}

			button = {
				using = default_button
				size = { 360 40 }
				raw_text = "Dissent"
				onclick = "[GetVariableSystem.Toggle('politics_overview_dissent_panel')]"
			}

            button = {
				using = default_button
				size = { 360 40 }
				raw_text = "Natural Crises"
				onclick = "[GetVariableSystem.Toggle('politics_overview_crises_panel')]"
			}

			expand = {}
		}
	}

    type bpm_political_situation_subversive_actions = widget {
        size = { 325 250 }
        using = entry_bg_fancy_solid_bg
        datacontext = "[AccessPlayer.GetJournalEntry(JournalEntryType.Self)]"
        vbox = {
            background = {
                using = fade_right_entry_fancy_header_colored
                color = { 0.78 0.25 0.25 1 }
                margin = { 0 0 }
            }
            hbox = {
                margin = { 15 0 }
                margin_top = 10
                layoutpolicy_horizontal = expanding
                icon = {
                    size = { 40 40 }
                    block "icon_texture" {
                        texture = "[JournalEntry.GetIcon]"
                    }
                }   
                textbox = {
                    size = { 230 40 }
                    block "action_name" {
                        text = "[JournalEntry.GetName]"
                    }
                    default_format = "#header"
                    block "action_tooltip" {
                        tooltip = "[JournalEntry.GetStatusDesc]"
                    }
                    fontsize = 18
                    align = hcenter|vcenter
                    parentanchor = left|top
                    #multiline = yes
                }
                expand = {} 
            }
            divider_decorative = {}
            hbox = {
                margin = { 15 0 }
                layoutpolicy_horizontal = expanding
                textbox = {
                    size = { 285 40 }
                    text = "#header Planning#!"
                    fontsize = 14
                    align = hcenter|vcenter
                    parentanchor = left|top
                    #multiline = yes
                }
                expand = {} 
            }

            hbox = {
                margin = { 15 5 }
                #layoutpolicy_horizontal = expanding
                datamodel = "[AccessPlayer.AccessAllInterestGroups]"
                item = {
                    ig_icon = {
                        block "ig_planning" {
                            visible = "[GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)]"
                        }
                        size = { 22 22 }
                        blockoverride "tooltip" {}
                        blockoverride "in_government_icon" {}
                    }
                }
            }

            divider_clean = {}
            expand = {}


            hbox = {
                margin = { 15 0 }
                layoutpolicy_horizontal = expanding
                textbox = {
                    size = { 285 40 }
                    text = "#header Possible#!"
                    fontsize = 14
                    align = hcenter|vcenter
                    parentanchor = left|top
                    #multiline = yes
                }
                expand = {} 
            }

            expand = {}

            hbox = {
                margin = { 15 5 }
                #layoutpolicy_horizontal = expanding
                datamodel = "[AccessPlayer.AccessAllInterestGroups]"
                item = {
                    ig_icon = {
                        block "ig_possible" {
                            visible = "[GetScriptedGui('bpm_ig_is_planning_subversive_action_sg').IsValid(GuiScope.SetRoot(InterestGroup.MakeScope).End)]"
                        }
                        size = { 22 22 }
                        blockoverride "tooltip" {}
                        blockoverride "in_government_icon" {}
                    }
                }
            }

            expand = {}
        }
    }

    type bpm_political_situation_crises_scandals = widget {
        size = { 350 300 }
        using = entry_bg_fancy_solid_bg
        datacontext = "[AccessPlayer.GetJournalEntry(JournalEntryType.Self)]"
        vbox = {
            background = {
                using = fade_right_entry_fancy_header_colored
                color = { 0.78 0.25 0.25 1 }
                margin = { 0 0 }
            }
            hbox = {
                margin = { 15 0 }
                margin_top = 10
                layoutpolicy_horizontal = expanding
                icon = {
                    size = { 40 40 }
                    block "icon_texture" {
                        texture = "[JournalEntry.GetIcon]"
                    }
                }   
                textbox = {
                    size = { 230 40 }
                    block "action_name" {
                        text = "[JournalEntry.GetName]"
                    }
                    default_format = "#header"
                    block "action_tooltip" {
                        tooltip = "[JournalEntry.GetStatusDesc]"
                    }
                    fontsize = 18
                    align = hcenter|vcenter
                    parentanchor = left|top
                    #multiline = yes
                }
                expand = {} 
            }
            divider_decorative = {}

            textbox = {
                size = { 300 200 }
                visible = "[Not(JournalEntry.IsActive)]"
                text = "[JournalEntry.GetActivationTooltip]"
                fontsize = 16
                align = hcenter|top
                parentanchor = left|top
                multiline = yes
                margin = { 0 10 }
            }
            
            textbox = {
                visible = "[JournalEntry.IsActive]"
                size = { 300 140 }
                text = "[JournalEntry.GetInvalidationTooltip]"
                fontsize = 16
                align = hcenter|top
                parentanchor = left|top
                multiline = yes
                margin = { 0 10 }
            }
            
            #expand = {}

            divider_clean = {
                visible = "[JournalEntry.IsActive]"
            }

            hbox = {
                visible = "[JournalEntry.IsActive]"
                #margin = { 15 0 }
                layoutpolicy_horizontal = expanding
                textbox = {
                    size = { 300 40 }
                    text = "bpm_interface_effect_while_active"
                    fontsize = 16
                    align = hcenter|vcenter
                    parentanchor = left|top
                    #multiline = yes
                }
            }
            

            hbox = {

                datamodel = "[JournalEntry.GetTimedModifiers]"
                spacing = 5
                visible = "[Not(IsDataModelEmpty(JournalEntry.GetTimedModifiers))]"
                #parentanchor = vcenter|right
                #datamodel_wrap = 2
                margin = { 0 10 }
                margin_bottom = 10
                #margin_right = 30

                item = {
                    icon = {
                        tooltip = "[TimedModifier.GetTooltip]"
                        texture = "[TimedModifier.GetIcon]"
                        size = { 30 30 }
                        parentanchor = top
                    }
                }

            }



        }
    }


}
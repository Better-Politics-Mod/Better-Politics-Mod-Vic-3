on:
  push:
    branches:
      - main

jobs:
  release:
    name: "Publish Release"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Checkout Tags
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch --prune --unshallow --tags

        # Get the latest tag from git
        # Tag is used as the last version
      - name: Get Version
        id: project
        run: |
          echo "last-version=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT

      - name: Increment Version
        id: increment-version
        uses: christian-draeger/increment-semantic-version@1.2.1
        with:
          current-version: ${{ steps.project.outputs.last-version }}
          version-fragment: ${{ inputs.release-type }}

        # Collect commits since the last tag
        # Format them as a Markdown list and put them into the summary
        # Report: Commit list
      - name: Collect Changes
        id: commits
        run: |
          {
            echo 'markdown<<EOF'
            echo "$(git log ${{ steps.project.outputs.last-version }}..HEAD --no-merges --pretty=format:' - %s')"
            echo EOF
          } >> "$GITHUB_OUTPUT"
          echo "# Commits" >> $GITHUB_STEP_SUMMARY
          echo "$(git log ${{ steps.project.outputs.last-version }}..HEAD --no-merges --pretty=format:' - %s')" >> $GITHUB_STEP_SUMMARY

        # Create a GitHub release
        # Includes the list of commits
        # Includes the mod package
      - name: Publish GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2.2.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          files: release-${{ steps.increment-version.outputs.next-version }}.zip
          tag_name: ${{ steps.increment-version.outputs.next-version }}
          name: ${{ steps.increment-version.outputs.next-version }}
          body: |
            New version of **BPM**.

            ### Commits:
            ${{ steps.commits.outputs.markdown }}

      - name: Setup SteamCMD
        if: ${{ inputs.publish == 'true' }}
        uses: buildalon/setup-steamcmd@v1.0.4
        
      - name: Publish to Workshop
        if: ${{ inputs.publish == 'true' }}
        shell: bash
        run: |
          ./update_bpm.sh better_politics_mod '${{ secrets.STEAM_PASSWORD }}'
          

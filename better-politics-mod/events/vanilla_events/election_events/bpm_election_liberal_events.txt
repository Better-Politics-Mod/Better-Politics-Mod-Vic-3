namespace = election_liberal_events

# An Extreme Reaction
# If there are fascists or ethno-nationalist leaders within the conservative party, the liberals can question their supposedly moderate image.
election_liberal_events.1 = {
	type = country_event
	placement = root
	title = election_liberal_events.1.t
	desc = election_liberal_events.1.d
	flavor = election_liberal_events.1.f

	duration = 3

	event_image = {
		video = "southamerica_election"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		NOT = { has_law = law_type:law_single_party_state }
		NOT = { has_variable = election_event_cooldown }
		in_election_campaign = yes
		any_active_party = {
			is_party_type = liberal_party
		}
		any_interest_group = {
			leader = {
				bpm_leader_is_fascist = yes
			}
			has_party = yes
			party = {
				is_party_type = conservative_party
			}
		}
		any_scope_pop = {
			culture_accepted = no
		}
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = { is_party_type = liberal_party }
			save_scope_as = liberal_party
		}
		random_interest_group = {
			limit = {
				leader = {
					bpm_leader_is_fascist = yes
				}
				has_party = yes
				party = {
					is_party_type = conservative_party
				}
			}
			leader = { save_scope_as = extremist_leader }
			party = { save_scope_as = conservative_party }
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	# Accept the argument, giving momentum to the liberal party.
	option = {
		name = election_liberal_events.1.a
		py:liberal_party = {
			add_momentum = momentum_large
		}
	}

	# Suggest that these are simply dedicated patriots, giving a smaller momentum to the conservative party, but creating radicalism among discriminated pops.
	option = {
		name = election_liberal_events.1.b
		default_option = yes

		py:conservative_party = {
			add_momentum = momentum_small
		}

		add_modifier = {
			name = downplaying_fascism
			months = normal_modifier_time
		}
	}
}

# A Gentler [ROOT.GetCountry.GetName]
# If there is a pacifist leader in the liberal party and the country has high infamy, they can campaign on improving the country's image with a softer foreign policy.
election_liberal_events.3 = {
	type = country_event
	placement = root
	title = election_liberal_events.3.t
	desc = election_liberal_events.3.d
	flavor = election_liberal_events.3.f

	duration = 3

	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		in_election_campaign = yes
		NOT = { has_variable = election_event_cooldown }
		any_interest_group = {
			OR = {
				has_ideology = ideology:ideology_mil_antimilitarist
				leader = { has_ideology = ideology:ideology_pacifist }
			}
			has_party = yes
			party = {
				is_party_type = liberal_party
			}
		}
		infamy >= infamy_threshold:infamous
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = { is_party_type = liberal_party }
			save_scope_as = liberal_party
		}
		random_scope_character = {
			limit = {
				has_ideology = ideology:ideology_pacifist
				interest_group.party = {
					is_party_type = liberal_party
				}
			}
			save_scope_as = pacifist_leader
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	# Accept the argument, giving momentum to the liberal party and some popularity to the pacifist.
	option = {
		name = election_liberal_events.3.a
		py:liberal_party = {
			add_momentum = momentum_medium
		}
		scope:pacifist_leader = {
			add_modifier = {
				name = dove_of_reconciliation # character_popularity_add
				months = normal_modifier_time
			}
		}
		change_infamy = -5
	}

	# Argue that it is good to be feared, gaining a modifier that slows infamy decay.
	option = {
		name = election_liberal_events.3.b
		default_option = yes

		add_modifier = {
			name = better_to_be_feared # country_infamy_decay_mult / negative
			months = normal_modifier_time
		}
	}
}

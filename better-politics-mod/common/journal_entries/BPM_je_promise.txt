je_bpm_government_promise_law = {
    icon = "gfx/interface/icons/event_icons/event_scales.dds"

	group = je_group_internal_affairs
    
    immediate = {
        ROOT = {
            var:bpm_promise_desired_law = {
                save_scope_as = government_promise_law
            }
        }
        random_interest_group = {
            limit = {
                has_variable = bpm_promised_ig
            }
            save_scope_as = government_promise_ig
        }
    }

    status_desc = {
		first_valid = {
			triggered_desc = {
				desc = je_bpm_government_promise_status
			}
		}
	}

    complete = {
        exists = scope:government_promise_law
        has_law = scope:government_promise_law.type
    }

    on_complete = {
        scope:government_promise_ig = {
            add_modifier = {
                name = bpm_followed_through_with_promised_content_ig
                months = short_modifier_time
            }
        }
        add_modifier = {
            name = bpm_followed_through_with_promise
            months = short_modifier_time
        }
        every_interest_group = {
            limit = {
                has_variable = bpm_promised_ig
            }
            remove_variable = bpm_promised_ig
        }
        remove_variable = bpm_promise_desired_law
    }

    invalid = {
        OR = {
            scope:government_promise_ig ?= {
                law_stance = {
                    law = scope:government_promise_law.type
                    value < approve
                }
            }
            NOT = {
                exists = scope:government_promise_law
            }
        }
    }

    fail = {

    }

    on_timeout = {
        # to replace with other modifiers
        # this should be rather harsh
        if = {
            limit = {
                is_enacting_law = scope:government_promise_law.type
            }
            scope:government_promise_ig = {
                if = {
                    limit = {
                        is_powerful = yes
                    }
                    add_modifier = {
                        name = bpm_went_back_on_promise_angry_ig
                        months = long_modifier_time
                        is_decaying = yes
                        multiplier = {
                            add = 1.5
                            divide = {
                                add = 1
                                add = ROOT.enactment_phase
                            }
                        }
                    }
                }
                else = {
                    add_modifier = {
                        name = bpm_went_back_on_promise_angry_ig
                        months = long_modifier_time
                        is_decaying = yes
                        multiplier = {
                            add = 1
                            divide = {
                                add = 1
                                add = ROOT.enactment_phase
                            }
                        }
                    }
                }
            }
        }
        else = {
            scope:government_promise_ig = {
                if = {
                    limit = {
                        is_powerful = yes
                    }
                    add_modifier = {
                        name = bpm_went_back_on_promise_angry_ig
                        months = long_modifier_time
                        is_decaying = yes
                        multiplier = 1.5
                    }
                }
                else = {
                    add_modifier = {
                        name = bpm_went_back_on_promise_angry_ig
                        months = long_modifier_time
                        is_decaying = yes
                    }
                }
            }
        }

        add_modifier = {
            name = bpm_went_back_on_promise
            months = long_modifier_time
        }
        
        every_interest_group = {
            limit = {
                has_variable = bpm_promised_ig
            }
            remove_variable = bpm_promised_ig
        }
        remove_variable = bpm_promise_desired_law
        # set_variable = bpm_cannot_promise_a_law # Handled by the 10 year modifier instead
    }

    on_fail = { }

    on_invalid = {
        every_interest_group = {
            limit = {
                has_variable = bpm_promised_ig
            }
            remove_variable = bpm_promised_ig
        }
        remove_variable = bpm_promise_desired_law
    }

    timeout = 1825

    weight = 1000

    should_be_pinned_by_default = yes
}
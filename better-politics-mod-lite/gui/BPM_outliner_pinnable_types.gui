@entry_width = 350
@entry_height = 30

types pinnable_outliner_items {
	type interest_group_item = pinnable_outliner_entry {
		datacontext = "[OutlinerEntry.AccessScope.AccessInterestGroup]"
		visible = "[GreaterThanOrEqualTo_CFixedPoint(InterestGroup.GetClout,'(CFixedPoint)0.001')]"

		tooltipwidget = {
			FancyTooltip_IG = {}
		}

		# Override the entire item so we can make it responsive using an hbox
		blockoverride "widget" {
			hbox = {
				margin_left = 5
				margin_right = 25
				maximumsize = { @entry_width -1 }
				layoutpolicy_horizontal = expanding

				flowcontainer = {
					margin_right = 5

					ig_icon = {
						size = { 25 25 }
						parentanchor = vcenter

						blockoverride "in_government_icon_properties" {
							size = { 40% 40% }
							parentanchor = bottom|right
							position = { 2 0 }
						}
					}
					icon = {
						datacontext = "[InterestGroup.GetParty]"
						visible = "[InterestGroup.HasParty]"
						texture = "[Party.GetIcon]"
						size = { 20 20 }
						parentanchor = vcenter

						tooltipwidget = {
							FancyTooltip_Party = {}
						}
					}
				}

				textbox = {
					block "expand_buttons_margin" {}
					align = left|nobaseline
					elide = right
					text = "[InterestGroup.GetNameNoFormatting]"
					fontsize = 15
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
				}

				textbox = {
					autoresize = yes
					raw_text = "#variable [InterestGroup.GetApprovalValue|+=]#!"
					minimumsize = { 30 -1 }
					align = right|nobaseline
					tooltip = "IG_APPROVAL_BREAKDOWN"
					margin_right = 3
					visible = "[Not(InterestGroup.IsMarginal)]"
					layoutpolicy_horizontal = fixed
				}

				widget = {
					size = { 30 23 }
					fixedgridbox = {
						flipdirection = yes
						datamodel = "[InterestGroup.AccessTraits]"
						addcolumn = 10
						addrow = 23
						visible = "[Not(InterestGroup.IsMarginal)]"
	
						item = {
							widget = {
								size = { 10 23 }
	
								icon = {
									parentanchor = center
									texture = "[InterestGroupTrait.GetTexture]"
									enabled = "[InterestGroupTrait.IsEnabled(InterestGroup.Self)]"
									using = tooltip_above
									size = { 17 23 }
									alpha = "[TransparentIfFalse(InterestGroupTrait.IsEnabled(InterestGroup.Self))]"
									
									tooltipwidget = {
										FancyTooltip_InterestGroupTrait = {
											blockoverride "icon" {
												icon = {
													texture = "[InterestGroupTrait.GetTexture]"
													enabled = "[InterestGroupTrait.IsEnabled(InterestGroup.Self)]"
													size = { 33 45 }
													parentanchor = center
												}
											}
										}
									}
								}
							}
						}
					}
	
				}

				# widget = { size = { 5 5 }}

				# character_portrait_mini = {
				# 	datacontext = "[InterestGroup.AccessLeader]"
				# }

				icon = {
					size = { 25 25 }		
					datacontext = "[InterestGroup.AccessLeader.GetIdeology]"					
					texture = "[Ideology.GetTexture]"
					using = tooltip_above
					tooltipwidget = {
						FancyTooltip_Ideology = {}
					}
				}

				textbox = {
					autoresize = yes
					text = "[InterestGroup.GetClout|%1v]"
					minimumsize = { 45 -1 }
					maximumsize = { 45 -1 }
					elide = right
					fontsize_min = 12
					align = right|nobaseline
					using = clout_tooltip_with_graph
				}
			}
		}

		blockoverride "onclick" {
			onclick = "[InformationPanelBar.OpenInterestGroupPanel( InterestGroup.AccessSelf )]"
			onrightclick = "[RightClickMenuManager.ShowForIG(InterestGroup.AccessSelf)]"
		}
	}
}

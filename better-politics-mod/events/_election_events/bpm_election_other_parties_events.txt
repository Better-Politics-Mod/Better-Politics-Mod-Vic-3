namespace = election_other_parties_events

# Ordo Naturalis
# The Military Party gains momentum when you're at war
election_other_parties_events.3 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.3.t
	desc = election_other_parties_events.3.d
	flavor = election_other_parties_events.3.f

	duration = 3

	event_image = {
		video = "unspecific_military_parade"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		NOT = { has_law = law_type:law_single_party_state }
		in_election_campaign = yes
		NOT = { has_variable = election_event_cooldown }
		any_active_party = {
			is_party_type = military_party
		}
		is_at_war = yes
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = { is_party_type = military_party }
			save_scope_as = military_party
		}
		random_scope_war = {
			save_scope_as = ongoing_war
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	option = { #these people are our only option
		name = election_other_parties_events.3.a
		py:military_party = {
			add_momentum = momentum_medium
		}
		ig:ig_armed_forces = { #armed forces like this
			add_modifier = {
				name = supported_war_politics_modifier # interest_group_approval_add
				months = normal_modifier_time
			}
		}
		if = {
			limit = {
				any_interest_group = {
					OR = {
						has_ideology = ideology:ideology_mil_antimilitarist
						leader = { has_ideology = ideology:ideology_pacifist }
					}
				}
			}
			every_interest_group = {
				limit = {
					OR = {
						has_ideology = ideology:ideology_mil_antimilitarist
						leader = { has_ideology = ideology:ideology_pacifist }
					}
				}
				add_modifier = {
					name = supported_war_leaders_modifier
					months = short_modifier_time
				}
			}
		}
	}

	option = { #they need to stop being populists
		name = election_other_parties_events.3.b
		default_option = yes
		py:military_party = {
			add_momentum = momentum_large_decrease
		}
		add_loyalists = {
			value = large_radicals
			pop_type = academics
		}
		add_radicals = {
			value = medium_radicals
			pop_type = officers
		}
		add_radicals = {
			value = medium_radicals
			pop_type = soldiers
		}
	}
}

# Lagom
# Social Democrats say "hey, at least we're not THAT guy" (communists/radicals/anarchists)
election_other_parties_events.4 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.4.t
	desc = election_other_parties_events.4.d
	flavor = election_other_parties_events.4.f

	duration = 3

	event_image = {
		video = "unspecific_signed_contract"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		OR = {
			has_global_variable = global_socialists_disunited_var
			has_variable = local_socialists_disunited_var
		}
		NOT = { has_law = law_type:law_single_party_state }
		in_election_campaign = yes
		NOT = { has_variable = election_event_cooldown }
		any_active_party = {
			is_party_type = social_democrat_party
		}
		OR = {
			any_active_party = {
				is_party_type = communist_party
			}
			any_active_party = {
				is_party_type = anarchist_party
			}
			any_active_party = {
				is_party_type = radical_party
			}
		}
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = { is_party_type = social_democrat_party }
			save_scope_as = social_democrat_party
		}
		if = {
			limit = {
				any_active_party = {
					is_party_type = communist_party
				}
			}
			random_active_party = {
				limit = { is_party_type = communist_party }
				save_scope_as = leftist_party
			}
		}
		else_if = {
			limit = {
				any_active_party = {
					is_party_type = anarchist_party
				}
			}
			random_active_party = {
				limit = { is_party_type = anarchist_party }
				save_scope_as = leftist_party
			}
		}
		else_if = {
			limit = {
				any_active_party = {
					is_party_type = radical_party
				}
			}
			random_active_party = {
				limit = { is_party_type = radical_party }
				save_scope_as = leftist_party
			}
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	option = { #well, maybe we WANT you to be
		name = election_other_parties_events.4.a
		scope:leftist_party = {
			add_momentum = momentum_medium
		}
	}
	
	option = { #and thank God for that
		name = election_other_parties_events.4.b
		default_option = yes
		py:social_democrat_party = {
			add_momentum = momentum_small
		}
	}
}

# Radical!
# Radicals are radicalising around
election_other_parties_events.5 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.5.t
	desc = election_other_parties_events.5.d
	flavor = election_other_parties_events.5.f

	duration = 3

	event_image = {
		video = "unspecific_politicians_arguing"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		NOT = { has_law = law_type:law_single_party_state }
		in_election_campaign = yes
		NOT = { has_variable = election_event_cooldown }
		any_active_party = {
			is_party_type = radical_party
		}
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = { is_party_type = radical_party }
			save_scope_as = radical_party
		}
		random_scope_state = {
			limit = {
				is_incorporated = yes
			}
			save_scope_as = radicals_state
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	option = { #keep up with the good work
		name = election_other_parties_events.5.a
		py:radical_party = { #you give them momentum
			add_momentum = momentum_medium
		}
		scope:radicals_state = {
			add_radicals_in_state = {
				value = small_radicals
			}
		}
	}

	option = { #pls stop
		name = election_other_parties_events.5.b
		default_option = yes
		py:radical_party = {
			add_momentum = momentum_medium_decrease
		}
		if = {
			limit = {
				any_interest_group = {
					is_marginal = no
					OR = {
						bpm_ig_is_radical_liberal = yes
						leader = { has_ideology = ideology:ideology_radical }
					}
				}
			}
			every_interest_group = {
				limit = {
					is_marginal = no
					OR = {
						bpm_ig_is_radical_liberal = yes
						leader = { has_ideology = ideology:ideology_radical }
					}
				}
				add_modifier = {
					name = stopped_radicals_modifier
					months = short_modifier_time
				}
			}
		}				
	}
	
	option = { #pls stop harder
		name = election_other_parties_events.5.c
		trigger = {
			OR = {
				institution_investment_level = {
					institution = institution_police
					value >= 5
				}
				has_law = law_type:law_outlawed_dissent
			}
		}
		py:radical_party = {
			add_momentum = momentum_large_decrease
		}
		scope:radicals_state = {
			add_radicals_in_state = {
				value = medium_radicals
			}
		}
	}
}
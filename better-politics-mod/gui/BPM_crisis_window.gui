@panel_width = 540
@panel_width_minus_10 = 530
@panel_width_minus_20 = 520
	
widget = {
	name = "bpm_crisis_window"
	size = { 100% 100% }
	layer = layer_ingame_menu
	datacontext = "[GetPlayer]"
    visible = "[GetMetaPlayer.GetPlayedOrObservedCountry.IsValid]"

    visible = "[GetVariableSystem.HasValue('com_open_window', 'bpm_gui_sidebar_icon')]"	
    bpm_fullscreen_block_window = {
		parentanchor = top|hcenter
		size = { 100% 100% }
		filter_mouse = all
		allow_outside = yes
		alwaystransparent = no

		background = {
			texture = "gfx/state_pictures/urban_european_overlord.dds"
			alpha = 0.1
			margin = { -15 0 }
			
			modify_texture = {
				texture = "gfx/interface/masks/fade_vertical_center.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				blend_mode = alphamultiply
			}
			modify_texture = {
				texture = "gfx/interface/masks/fade_horizontal_less_left.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				alpha = 0.2
				blend_mode = alphamultiply
			}
			modify_texture = {
				texture = "gfx/interface/masks/fade_horizontal_less_right.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				alpha = 0.5
				blend_mode = alphamultiply
			}
		}


		visible = "[GetVariableSystem.HasValue('com_open_window', 'bpm_gui_sidebar_icon')]"
		#This is necessary to remove the overlay even if the scripted button is used.
		#It uses the community variable to hide and show the overlay if the window is open/closed
        blockoverride "window_header_name"
        {
            raw_text = "#bold Crises#!"
        }

		state = {
			name = _show
			on_finish = "[GetVariableSystem.Set( 'com_fullscreen', 'com_fullscreen')]"
			# Close open panel before showing this one
            on_finish = "[GetVariableSystem.Set('bpm_crisis_tab', 'dissent')]"
			on_finish = "[InformationPanelBar.ClosePanel]"
			on_finish = "[MapListPanelManager.CloseCurrentPanel]"
		}
		state = {
			name = _hide
			on_finish = "[GetVariableSystem.Clear( 'com_fullscreen')]"
		}
	
		blockoverride "back_button_fullscreen" {
			#This just removes deactivates the whole window.
			blockoverride "button_close"
			{
            	onclick = "[GetVariableSystem.Clear('com_open_window')]"
			}
	
			back_button_large = {
				position = { 11 15 }
				parentanchor = top|left
            	onclick = "[GetVariableSystem.Clear('com_open_window')]"
				input_action = "back"
			}
		}
	
		blockoverride "close_button_onclick" {
            onclick = "[GetVariableSystem.Clear('com_open_window')]"
		}
        	
		blockoverride "animation_state_block" {
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/SideBar/technology"
				}
				start_sound = {
					soundeffect = "snapshot:/Dynamic/mute_world_80"
				}
				start_sound = {
					soundeffect = "snapshot:/Dynamic/mute_vfx_war_100"

				}
			}

			state = {
				name = _hide
				start_sound = {
					soundeffect = "event:/SFX/UI/SideBar/technology_stop"
				}
			}
		}

        		
		blockoverride "fixed_top"
		{
			tab_buttons = {
				# Overview
				blockoverride "first_button" {
					text = "Dissent"
				}
				blockoverride "first_button_tooltip" {
					tooltip = "Dissent"
				}
				blockoverride "first_button_click" {
					onclick = "[GetVariableSystem.Set('bpm_crisis_tab', 'dissent')]"
				}
				blockoverride "first_button_visibility" {
					visible = "[GetVariableSystem.HasValue('bpm_crisis_tab', 'dissent')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not(GetVariableSystem.HasValue('bpm_crisis_tab', 'dissent'))]"
				}
				blockoverride "first_button_selected" {
					text = "Dissent"
				}

				# Details
				blockoverride "second_button" {
					text = "Crises"
				}
				blockoverride "second_button_tooltip" {
					tooltip = "Crises"
				}
				blockoverride "second_button_click" {
					onclick = "[GetVariableSystem.Set('bpm_crisis_tab', 'crises')]"
				}
				blockoverride "second_button_visibility" {
					visible = "[GetVariableSystem.HasValue('bpm_crisis_tab', 'crises')]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[Not(GetVariableSystem.HasValue('bpm_crisis_tab', 'crises'))]"
				}
				blockoverride "second_button_selected" {
					text = "Crises"
				}

                # # Details
				# blockoverride "third_button" {
				# 	text = "Issues"
				# }
				# blockoverride "third_button_tooltip" {
				# 	tooltip = "Issues"
				# }
				# blockoverride "third_button_click" {
				# 	onclick = "[GetVariableSystem.Set('bpm_crisis_tab', 'scandals')]"
				# }
				# blockoverride "third_button_visibility" {
				# 	visible = "[GetVariableSystem.HasValue('bpm_crisis_tab', 'scandals')]"
				# }
				# blockoverride "third_button_visibility_checked" {
				# 	visible = "[Not(GetVariableSystem.HasValue('bpm_crisis_tab', 'scandals'))]"
				# }
				# blockoverride "third_button_selected" {
				# 	text = "Issues"
				# }
			}
		}
		


        blockoverride "entire_content_area"
        {
            fullscreen_scrollarea = {
                visible = "[GetVariableSystem.HasValue('bpm_crisis_tab', 'dissent')]"
                bpm_political_situation_dissent_panel = {
                }
            }
            fullscreen_scrollarea = {
                visible = "[GetVariableSystem.HasValue('bpm_crisis_tab', 'crises')]"
                bpm_political_situation_crises_panel = {
                }
            }
             fullscreen_scrollarea = {
                 visible = "[GetVariableSystem.HasValue('bpm_crisis_tab', 'scandals')]"
            #     bpm_political_situation_scandals_panel = {
                 #}

				#  widget = {
				# 	size = { 400 80 }
				# 	background = {
				# 		using = entry_bg_simple
				# 	}
				# 	parentanchor = hcenter|vcenter
				# 	hbox = {
				# 		margin = { 10 0 }
				# 		layoutpolicy_horizontal = expanding
				# 		datacontext = "[GetPlayer.MakeScope.Var('bpm_cabinet_agenda_je').GetJournalEntry]"
				# 		bpm_cabinet_action = {
				# 			datacontext = "[GetScriptedGui('bpm_cabinet_agenda_slot_one_sgui')]"
				# 			blockoverride "action_name" {
				# 				text = "[Localize(Concatenate(JournalEntry.MakeScope.Var('bpm_cabinet_agenda_slot_one').GetFlagName, '_name'))]"
				# 			}
				# 			blockoverride "values" {
				# 				value = "[JournalEntry.MakeScope.Var('bpm_cabinet_agenda_slot_one_progress').GetValue]"
				# 				min = 0
				# 				max = 1
				# 			}
				# 			blockoverride "bpm_set_slot_num" {
				# 				onclick = "[GetVariableSystem.Set('bpm_cabinet_agenda_selection_slot', 'slot_1')]"
				# 			}
				# 			blockoverride "close_button" {
				# 				onclick = "[GetScriptedGui('bpm_cabinet_agenda_set_slot_one').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('slot', MakeScopeFlag('bpm_no_cabinet_agenda')).End)]"
				# 			}
				# 		}
				# 		bpm_cabinet_action = {
				# 			datacontext = "[GetScriptedGui('bpm_cabinet_agenda_slot_two_sgui')]"
				# 			blockoverride "action_name" {
				# 				text = "[Localize(Concatenate(JournalEntry.MakeScope.Var('bpm_cabinet_agenda_slot_two').GetFlagName, '_name'))]"
				# 			}
				# 			blockoverride "values" {
				# 				value = "[JournalEntry.MakeScope.Var('bpm_cabinet_agenda_slot_two_progress').GetValue]"
				# 				min = 0
				# 				max = 1
				# 			}
				# 			blockoverride "bpm_set_slot_num" {
				# 				onclick = "[GetVariableSystem.Set('bpm_cabinet_agenda_selection_slot', 'slot_2')]"
				# 			}
				# 			blockoverride "close_button" {
				# 				onclick = "[GetScriptedGui('bpm_cabinet_agenda_set_slot_two').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('slot', MakeScopeFlag('bpm_no_cabinet_agenda')).End)]"
				# 			}
				# 		}
				# 		bpm_cabinet_action = {
				# 			datacontext = "[GetScriptedGui('bpm_cabinet_agenda_slot_three_sgui')]"
				# 			blockoverride "action_name" {
				# 				text = "[Localize(Concatenate(JournalEntry.MakeScope.Var('bpm_cabinet_agenda_slot_three').GetFlagName, '_name'))]"
				# 			}
				# 			blockoverride "values" {
				# 				value = "[JournalEntry.MakeScope.Var('bpm_cabinet_agenda_slot_three_progress').GetValue]"
				# 				min = 0
				# 				max = 1
				# 			}
				# 			blockoverride "bpm_set_slot_num" {
				# 				onclick = "[GetVariableSystem.Set('bpm_cabinet_agenda_selection_slot', 'slot_3')]"
				# 			}
				# 			blockoverride "close_button" {
				# 				onclick = "[GetScriptedGui('bpm_cabinet_agenda_set_slot_three').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('slot', MakeScopeFlag('bpm_no_cabinet_agenda')).End)]"
				# 			}
				# 		}
				# 	}
				#  }
             }
            
        }
    }
}